"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[4841],{36979:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  comp: () => (/* reexport */ Map_html),\n  data: () => (/* binding */ data)\n});\n\n// EXTERNAL MODULE: ./node_modules/.pnpm/@vue+runtime-core@3.5.13/node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js\nvar runtime_core_esm_bundler = __webpack_require__(6254);\n;// ./node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.13_webpack@5.97.1/node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!./node_modules/.pnpm/@vuepress+bundler-webpack@2.0.0-rc.18/node_modules/@vuepress/bundler-webpack/dist/vuepress-ssr-loader.cjs!./node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.13_webpack@5.97.1/node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./book/.vuepress/.temp/pages/Java/集合与流/Map.html.vue?vue&type=template&id=78c2721a\n\n\nfunction render(_ctx, _cache) {\n  return ((0,runtime_core_esm_bundler/* openBlock */.uX)(), (0,runtime_core_esm_bundler/* createElementBlock */.CE)("div", null, _cache[0] || (_cache[0] = [\n    (0,runtime_core_esm_bundler/* createStaticVNode */.Fv)("<h2 id=\\"_1-map接口\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#_1-map接口\\"><span>1. Map接口</span></a></h2><h3 id=\\"_1-1-map的方法\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#_1-1-map的方法\\"><span>1.1 Map的方法</span></a></h3><p><code>Map</code> 也被称为字典/关联数组，<code>Map&lt;K, V&gt;</code> 接口中定义了如下常用的方法：</p><table><thead><tr><th>方法</th><th>作用</th></tr></thead><tbody><tr><td><code>V get(Object key)</code></td><td>返回指定 <code>key</code> 所对应的 <code>value</code>。若不存在该 <code>key</code>，返回 <code>null</code>。实现类可以禁止键为 <code>null</code>。</td></tr><tr><td><code>V put(K key, V value)</code></td><td>添加一个 key-value 对。若 <code>key</code> 已存在，会被覆盖</td></tr><tr><td><code>void putAll(Map&lt;? extends K, ? extends V&gt; entries)</code></td><td>将某 <code>Map</code> 中的 key-value 复制到本 <code>Map</code> 中</td></tr><tr><td><code>boolean containsKey(Object key)</code></td><td>查询是否包含指定的 <code>key</code></td></tr><tr><td><code>boolean containsValue(Object value)</code></td><td>查询是否包含指定的 <code>value</code>（可能存在多个）</td></tr><tr><td><code>boolean isEmpty()</code></td><td>查询是否为空</td></tr><tr><td><code>int size()</code></td><td>返回 key-value 对的数量</td></tr><tr><td><code>default void forEach(BiConsumer&lt;? super K, ? super V&gt; action)</code></td><td>对这个 <code>Map</code> 中的所有键/值对应用这个动作</td></tr><tr><td><code>void clear()</code></td><td>清空所有 key-value 对</td></tr><tr><td><code>V remove(Object key)</code></td><td>删除指定 key 所对应的 key-value 对，返回被删除 <code>key</code> 所关联的 <code>value</code>。若 <code>key</code> 不存在，返回 <code>null</code></td></tr><tr><td><code>default boolean remove(Object key, Object value)</code></td><td>删除指定 <code>key,value</code> 所对应的 key-value 对。若删除失败，返回 <code>false</code></td></tr></tbody></table><p>Java 8为 Map 还增加了如下的特殊方法（待续）：</p><table><thead><tr><th>方法</th><th>作用</th></tr></thead><tbody><tr><td><code>default V getOrDefault(Object key, V defaultValue)</code></td><td>如果 <code>key</code> 存在，就使用获取其对应的值，否则返回 <code>defaultValue</code></td></tr><tr><td><code>default V putIfAbsent(K key, V value)</code></td><td>如果 <code>key</code> 存在，或者 <code>key</code> 为 <code>null</code>，则放入一个值</td></tr><tr><td><code>default V compute(K key, BiFunction&lt;? super K, ? super V, ? extends V&gt; remappingFunction)</code></td><td>将函数应用到 <code>key</code> 和 <code>get(key)</code>。将 <code>key</code> 与结果关联，但是如果结果为 <code>null</code>，则删除这个键。返回 <code>get(key)</code></td></tr><tr><td><code>default V computeIfPresent(K key, BiFunction&lt;? super K, ? super V, ? extends V&gt; remappingFunction)</code></td><td></td></tr><tr><td><code>default V computeIfAbsent(K key, Function&lt;? super K, ? extends V&gt; mappingFunction)</code></td><td></td></tr><tr><td><code>default V merge(K key, V value, BiFunction&lt;? super V, ? super V, ? extends V&gt; remappingFunction)</code></td><td></td></tr><tr><td><code>default V replace(K key, V value)</code></td><td></td></tr><tr><td><code>default boolean replace(K key, V oldValue, V newValue)</code></td><td></td></tr><tr><td><code>default void replaceAll(BiFunction&lt;? super K, ? super V, ? extends V&gt; function)</code></td><td>在所有映射条目上应用这个函数，将键与非 <code>null</code> 结果关联，但对于 <code>null</code> 结果，则将相应的键删除</td></tr><tr><td><code>default void forEach(BiConsumer&lt;? super K, ? super V&gt; action)</code></td><td></td></tr></tbody></table><h3 id=\\"_1-2-map的视图\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#_1-2-map的视图\\"><span>1.2 Map的视图</span></a></h3><p>Map有3种视图：键集、值集合、键/值对集，分别对应如下三个方法：</p><ul><li><code>Set&lt;K&gt; keySet()</code>：返回该 <code>Map</code> 中所有 <code>key</code> 组成的 <code>Set</code> 集合。可以从这个 <code>Set</code> 中删除元素，键和相关联的值将从原 <code>Map</code> 中删除，但是不能添加任何元素。</li><li><code>Collection&lt;V&gt; values()</code>：返回该 <code>Map</code> 里所有 <code>value</code> 组成的 <code>Collection</code>。可以从这个集合中删除元素，所删除的值及相应的键也将从原 <code>map</code> 中删除，但是不能添加任何元素。</li><li><code>Set&lt;Map.Entry&lt;K, V&gt;&gt; entrySet()</code>：将所有 key-value 对打包成 <code>Set</code> 集合，每个集合元素都是 <code>Map.Entry</code> 对象。可以从返回的 <code>set</code> 中删除元素，它们会同时从原来的 <code>map</code> 中删除，但是不能添加任何元素。</li></ul><p><code>Map</code> 中包括一个内部类<code>Map.Entry&lt;K, V&gt;</code>，该类封装了一个 key-value 对，其包含三个方法：</p><table><thead><tr><th style=\\"text-align:center;\\"><code>方法</code></th><th style=\\"text-align:center;\\"><code>作用</code></th></tr></thead><tbody><tr><td style=\\"text-align:center;\\"><code>K getKey()</code></td><td style=\\"text-align:center;\\">返回该 <code>Entry</code> 里的 <code>key</code> 值</td></tr><tr><td style=\\"text-align:center;\\"><code>V getValue()</code></td><td style=\\"text-align:center;\\">返回该 <code>Entry</code> 里的 <code>value</code> 值</td></tr><tr><td style=\\"text-align:center;\\"><code>V setValue(V newValue)</code></td><td style=\\"text-align:center;\\">设置该 <code>Entry</code> 里的 <code>value</code> 值，并返回新设置的 <code>value</code> 值</td></tr></tbody></table><h2 id=\\"_2-hashmap类\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#_2-hashmap类\\"><span>2. HashMap类</span></a></h2><blockquote><p>类似 <code>ArrayList</code> 和 <code>Vector</code> 的关系，<code>HashMap</code> 和 <code>Hashtable</code> 的对比几乎完全一致，还是尽量弃用老版本的 <code>Hashtable</code> 吧。</p></blockquote><p><code>HashMap</code> 是 <code>Map</code> 接口的典型实现类，其不能保证其中 key-value 对的顺序，可以使用 <code>null</code> 作为 key 或 value。</p><p>毫无疑问，<code>HashMap</code> 判断两个 key 相等的标准跟 Set 一样，需要其 <code>equals</code> 返回 <code>true</code> 且 <code>hashCode</code> 值相等；而 <code>HashMap</code> 判断两个 <code>value</code> 相等的标准则只需要 <code>equals</code> 返回 <code>true</code>。</p><p>与 <code>HashSet</code> 相似，如果使用可变对象作为 <code>HashMap</code> 的 key，并且程序修改了作为 key 的可变对象，则也可能出现与 HashSet 类似的情形，程序再也无法准确访问到 Map 中被修改过的 key。</p><p><code>HashMap</code> 的构造器：</p><ul><li><code>HashMap()</code></li><li><code>HashMap(int initialCapacity)</code></li><li><code>HashMap(int initialCapacity, float loadFactor)</code></li></ul><h2 id=\\"_3-linkedhashmap类\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#_3-linkedhashmap类\\"><span>3. LinkedHashMap类</span></a></h2><p><code>LinkedHashMap</code> 是 <code>HashMap</code> 的一个子类，其使用<strong>双向链表</strong>来维护 key-value 对的次序（其实只需要考虑 key 的次序），该链表负责维护 <code>Map</code> 的迭代顺序，迭代顺序与 key-value 对的<em>插入顺序</em>保持一致。</p><p><code>LinkedHashMap</code> 需要维护元素的插入顺序，因此性能略低于 <code>HashMap</code> 的性能；但因为它以链表来维护内部顺序，所以在遍历 <code>Map</code> 里的全部元素时将有较好的性能。</p><figure><img src=\\"https://figure-bed.chua-n.com/Java/image-20220619101705344.png\\" alt=\\"image-20220619101705344\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>image-20220619101705344</figcaption></figure><p>此外，<code>LinkedHashMap</code> 也可以使用<em>访问顺序</em>而不是插入顺序来迭代处理映射条目。每次调用 <code>get</code> 或 <code>put</code> 时，受到影响的项将从当前的位置删除，并放到项链表的尾部（只影响项在链表中的位置，而散列表的桶不会受影响，映射条目总是在键散列码对应的桶中）。</p><ul><li><p>要构造这样一个散列映射，调用构造器：<code>LinkedHashMap&lt;K, V&gt;(initialCapacity, loadFactor, true)</code></p></li><li><p><code>LinkedHashMap</code> 中这样一个方法，需要的时候可以选择创建一个子类并在子类中覆盖：</p><div class=\\"language-java line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"java\\" data-title=\\"java\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD;\\">protected</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD;\\"> boolean</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF;\\"> removeEldestEntry</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75;\\">(</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E5C07B;\\">Map</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF;\\">.</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E5C07B;\\">Entry</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2;\\">&lt;</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75;\\">K</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF;\\">,</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75;\\">V</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2;\\">&gt;</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75;\\"> eldest) {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD;\\">    return</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66;\\"> false</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF;\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75;\\">}</span></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0;\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li><li><p>访问顺序对于实现缓存的“最近最少使用”原则十分重要。</p></li></ul><table><thead><tr><th>方法</th><th>作用</th></tr></thead><tbody><tr><td><code>LinkedHashMap()</code></td><td></td></tr><tr><td><code>LinkedHashMap(int initialCapacity)</code></td><td></td></tr><tr><td><code>LinkedHashMap(int initialCapacity, float loadFactor)</code></td><td></td></tr><tr><td><code>LinkedHashMap(int initialCapacity, float loadFactor, boolean accessOrder)</code></td><td><code>accessOrder</code> 参数为 <code>true</code> 时表示访问顺序，为 <code>false</code> 时表示插入顺序</td></tr><tr><td><code>protected boolean removeEldestEntry(Map.Entry&lt;K,V&gt; eldest)</code></td><td>如果想删除 <code>eldest</code> 元素，就要覆盖为返回 <code>true</code>。<code>eldest</code> 参数是预期可能删除的元素，这个方法在向映射中添加一个元素之后调用。<code>LinkedHashMap</code> 的默认实现永远返回 <code>false</code>。</td></tr></tbody></table><h2 id=\\"_4-weakhashmap\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#_4-weakhashmap\\"><span>4. WeakHashMap</span></a></h2><blockquote><p>需要时再看吧……</p></blockquote><table><thead><tr><th>方法</th><th>作用</th></tr></thead><tbody><tr><td><code>WeakHashMap()</code></td><td></td></tr><tr><td><code>WeakHashMap(int initialCapacity)</code></td><td></td></tr><tr><td><code>WeakHashMap(int initialCapacity, float loadFactor)</code></td><td></td></tr></tbody></table><h2 id=\\"_5-enummap类\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#_5-enummap类\\"><span>5. EnumMap类</span></a></h2><p><code>EnumMap</code>是一个键类型为枚举类型的映射，创建 <code>EnumMap</code> 时必须显式或隐式指定它对应的枚举类。<code>EnumMap</code> 可以直接且高效地实现为一个值数组。</p><div class=\\"language-java line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"java\\" data-title=\\"java\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#C18401;--shiki-dark:#C678DD;\\">var</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75;\\"> personInCharge </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2;\\">=</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD;\\"> new</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B;\\"> EnumMap</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF;\\">&lt;</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B;\\">Weekday</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF;\\">,</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B;\\"> Employee</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF;\\">&gt;</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75;\\">(</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E5C07B;\\">Weekday</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF;\\">.</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E5C07B;\\">class</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75;\\">)</span></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0;\\"><div class=\\"line-number\\"></div></div></div><p><code>EnumMap</code> 有如下特征：</p><ul><li><code>EnumMap</code> 在内部以数组形式保存，因而其实现形式紧凑、高效；</li><li><code>EnumMap</code> 根据 key 的自然顺序，即枚举值在枚举类中的定义顺序，来维护 key-value 对的顺序；</li><li><code>EnumMap</code> 不允许使用 <code>null</code> 作为 key，但允许使用 <code>null</code> 作为 value。但如果只是查询是否包含值为 <code>null</code> 的key，或只是删除值为 null 的 key，不会抛出异常。</li></ul><h2 id=\\"_6-identityhashmap-类\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#_6-identityhashmap-类\\"><span>6. IdentityHashMap 类</span></a></h2><p><code>IdentityHashMap</code> 有特殊的用途。在这个类中，键的散列值不是用<code>hashCode</code>函数计算的，而是用 <code>System.identityHashCode</code> 方法计算的，这是<code>Object#hashCode</code>根据对象的内存地址计算散列码时所使用的方法。而且，在对两个对象进行比较时，<code>IdentityHashMap</code> 类使用 <code>==</code>，而不是<code>equals</code>方法。</p><table><thead><tr><th>方法</th><th>作用</th></tr></thead><tbody><tr><td><code>IdentityHashMap()</code></td><td></td></tr><tr><td><code>IdentityHashMap(int expectedMaxSize)</code></td><td>构造一个空的“标识散列映射集”，其容量是大于 $1.5 \\\\times expectedMaxSize$ 的2的最小幂值，<code>expectedMaxSize</code> 的默认值是 21</td></tr></tbody></table><h2 id=\\"_7-treemap类\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#_7-treemap类\\"><span>7. TreeMap类</span></a></h2><p>正如 <code>Set</code> 接口派生出 <code>SortedSet</code> 子接口、<code>SortedSet</code> 接口有一个 <code>TreeSet</code> 实现类一样，<code>Map</code> 接口也派生出一个 <code>SortedMap</code> 子接口，<code>SortedMap</code> 接口也有一个 <code>TreeMap</code> 实现类。</p><p><code>TreeMap</code> 就是一个红黑树数据结构，每个 key-value 对即作为红黑树的一个节点。<code>TreeMap</code> 存储 key-value 对时，需要根据 key 对节点进行排序，因而 <code>TreeMap</code> 可以保证所有的 key-value 对处于有序状态。</p><p><code>TreeMap</code> 也有两种排序方式：</p><ul><li><strong>自然排序</strong>：<code>TreeMap</code> 的所有 key 必须实现 <code>Comparable</code> 接口，且所有的 key 应该是同一个类的对象，否则会抛出 <code>ClassCastException</code> 异常。</li><li><strong>定制排序</strong>：创建 <code>TreeMap</code> 时传入一个 <code>Comparator</code> 对象，该对象负责对 <code>TreeMap</code> 中的所有 key 进行排序，此时不要求 <code>Map</code> 的 key 实现 <code>Comparable</code> 接口。</li></ul><p>与 <code>TreeSet</code> 类似，<code>TreeMap</code> 也提供了一系列根据 key 顺序访问 key-value 对的方法：</p><ul><li><p>返回类型为 <code>Map.Entry</code></p><table><thead><tr><th>方法</th><th>作用</th></tr></thead><tbody><tr><td><code>Map.Entry firstEntry()</code></td><td>返回 <code>Map</code> 中最小 key 所对应的 key-value 对。若 <code>Map</code> 为空，返回 <code>null</code></td></tr><tr><td><code>Map.Entry lastEntry()</code></td><td>返回 <code>Map</code> 中最大 key 所对应的 key-value 对。若 <code>Map</code> 为空，返回 <code>null</code></td></tr><tr><td><code>Map.Entry higherEntry(Object key)</code></td><td>返回该 <code>Map</code> 中位于 key 后一位的 key-value 对（即大于指定 key 的最小 key 所对应的 key-value 对）。若 <code>Map</code> 为空，返回 <code>null</code></td></tr><tr><td><code>Map.Entry lowerEntry(Object key)</code></td><td>返回该 <code>Map</code> 中位于 key 前一位的 key-value 对（即小于指定 key 的最大 key 所对应的 key-value 对）。若 <code>Map</code> 为空，返回 <code>null</code></td></tr></tbody></table></li><li><p>返回类型为 <code>Object</code>（作用同上，只是仅返回 key）</p><table><thead><tr><th>方法</th><th>作用</th></tr></thead><tbody><tr><td><code>Object firstKey()</code></td><td></td></tr><tr><td><code>Object lastKey()</code></td><td></td></tr><tr><td><code>Object higherKey(Object key)</code></td><td></td></tr><tr><td><code>Object lowerKey(Object key)</code></td><td></td></tr></tbody></table></li><li><p>返回子 <code>Map</code>：</p><ul><li><p>返回类型为 <code>SortedMap</code></p><table><thead><tr><th>方法</th><th>作用</th></tr></thead><tbody><tr><td><code>SortedMap subMap(Object fromKey, object toKey)</code></td><td>返回子 <code>Map</code>，其 key 的范围是$[fromKey, toKey) $</td></tr><tr><td><code>SortedMap tailMap(Object fromKey)</code></td><td>返回子 <code>Map</code>，其 key 的范围是$[fromKey, +\\\\infty]$</td></tr><tr><td><code>SortedMap headMap(Object toKey)</code></td><td>返回子 <code>Map</code>，其 key 的范围是$(-\\\\infty, toKey)$</td></tr></tbody></table></li><li><p>返回类型为 <code>NavigableMap</code>（含义基本同上）：</p><table><thead><tr><th>方法</th><th>作用</th></tr></thead><tbody><tr><td><code>NavigableMap subMap(Object fromKey, boolean fromInclusive, Object toKey, boolean toInclusive)</code></td><td></td></tr><tr><td><code>NavigableMap headMap(Object toKey, boolean inclusive)</code></td><td></td></tr><tr><td><code>NavigableMap tailMap(Object fromKey, boolean inclusive)</code></td><td></td></tr></tbody></table></li></ul></li></ul><p>当然，要访问该 <code>TreeMap</code> 使用的比较器，调用方法：</p><ul><li><code>Comparator&lt;? super K&gt; comparator()</code>：返回对键进行排序的比较器。如果键是用 <code>Comparable</code> 接口的 <code>compareTo</code> 方法比较，则返回 <code>null</code>。</li></ul><h2 id=\\"_8-properties\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#_8-properties\\"><span>8. Properties</span></a></h2><blockquote><p>继承自<code>HashTable</code>，竟然是个map......</p></blockquote>", 47)\n  ])))\n}\n// EXTERNAL MODULE: ./node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.13_webpack@5.97.1/node_modules/vue-loader/dist/exportHelper.js\nvar exportHelper = __webpack_require__(81021);\n;// ./book/.vuepress/.temp/pages/Java/集合与流/Map.html.vue\n\nconst script = {}\n\n;\nconst __exports__ = /*#__PURE__*/(0,exportHelper/* default */.A)(script, [[\'render\',render]])\n\n/* harmony default export */ const Map_html = (__exports__);\n;// ./book/.vuepress/.temp/pages/Java/集合与流/Map.html.js\n\nconst data = JSON.parse("{\\"path\\":\\"/Java/%E9%9B%86%E5%90%88%E4%B8%8E%E6%B5%81/Map.html\\",\\"title\\":\\"Map\\",\\"lang\\":\\"zh-CN\\",\\"frontmatter\\":{\\"title\\":\\"Map\\",\\"date\\":\\"2020-08-08T00:00:00.000Z\\",\\"description\\":\\"1. Map接口 1.1 Map的方法 Map 也被称为字典/关联数组，Map<K, V> 接口中定义了如下常用的方法： Java 8为 Map 还增加了如下的特殊方法（待续）： 1.2 Map的视图 Map有3种视图：键集、值集合、键/值对集，分别对应如下三个方法： Set<K> keySet()：返回该 Map 中所有 key 组成的 Set 集合...\\",\\"head\\":[[\\"meta\\",{\\"property\\":\\"og:url\\",\\"content\\":\\"https://chua-n.com/Java/%E9%9B%86%E5%90%88%E4%B8%8E%E6%B5%81/Map.html\\"}],[\\"meta\\",{\\"property\\":\\"og:site_name\\",\\"content\\":\\"荒流的笔趣屋\\"}],[\\"meta\\",{\\"property\\":\\"og:title\\",\\"content\\":\\"Map\\"}],[\\"meta\\",{\\"property\\":\\"og:description\\",\\"content\\":\\"1. Map接口 1.1 Map的方法 Map 也被称为字典/关联数组，Map<K, V> 接口中定义了如下常用的方法： Java 8为 Map 还增加了如下的特殊方法（待续）： 1.2 Map的视图 Map有3种视图：键集、值集合、键/值对集，分别对应如下三个方法： Set<K> keySet()：返回该 Map 中所有 key 组成的 Set 集合...\\"}],[\\"meta\\",{\\"property\\":\\"og:type\\",\\"content\\":\\"article\\"}],[\\"meta\\",{\\"property\\":\\"og:image\\",\\"content\\":\\"https://figure-bed.chua-n.com/Java/image-20220619101705344.png\\"}],[\\"meta\\",{\\"property\\":\\"og:locale\\",\\"content\\":\\"zh-CN\\"}],[\\"meta\\",{\\"property\\":\\"og:updated_time\\",\\"content\\":\\"2024-04-27T07:51:28.000Z\\"}],[\\"meta\\",{\\"property\\":\\"article:published_time\\",\\"content\\":\\"2020-08-08T00:00:00.000Z\\"}],[\\"meta\\",{\\"property\\":\\"article:modified_time\\",\\"content\\":\\"2024-04-27T07:51:28.000Z\\"}],[\\"script\\",{\\"type\\":\\"application/ld+json\\"},\\"{\\\\\\"@context\\\\\\":\\\\\\"https://schema.org\\\\\\",\\\\\\"@type\\\\\\":\\\\\\"Article\\\\\\",\\\\\\"headline\\\\\\":\\\\\\"Map\\\\\\",\\\\\\"image\\\\\\":[\\\\\\"https://figure-bed.chua-n.com/Java/image-20220619101705344.png\\\\\\"],\\\\\\"datePublished\\\\\\":\\\\\\"2020-08-08T00:00:00.000Z\\\\\\",\\\\\\"dateModified\\\\\\":\\\\\\"2024-04-27T07:51:28.000Z\\\\\\",\\\\\\"author\\\\\\":[{\\\\\\"@type\\\\\\":\\\\\\"Person\\\\\\",\\\\\\"name\\\\\\":\\\\\\"荒流\\\\\\",\\\\\\"url\\\\\\":\\\\\\"https://chua-n.com\\\\\\",\\\\\\"email\\\\\\":\\\\\\"chua_n@qq.com\\\\\\"}]}\\"]]},\\"headers\\":[{\\"level\\":2,\\"title\\":\\"1. Map接口\\",\\"slug\\":\\"_1-map接口\\",\\"link\\":\\"#_1-map接口\\",\\"children\\":[{\\"level\\":3,\\"title\\":\\"1.1 Map的方法\\",\\"slug\\":\\"_1-1-map的方法\\",\\"link\\":\\"#_1-1-map的方法\\",\\"children\\":[]},{\\"level\\":3,\\"title\\":\\"1.2 Map的视图\\",\\"slug\\":\\"_1-2-map的视图\\",\\"link\\":\\"#_1-2-map的视图\\",\\"children\\":[]}]},{\\"level\\":2,\\"title\\":\\"2. HashMap类\\",\\"slug\\":\\"_2-hashmap类\\",\\"link\\":\\"#_2-hashmap类\\",\\"children\\":[]},{\\"level\\":2,\\"title\\":\\"3. LinkedHashMap类\\",\\"slug\\":\\"_3-linkedhashmap类\\",\\"link\\":\\"#_3-linkedhashmap类\\",\\"children\\":[]},{\\"level\\":2,\\"title\\":\\"4. WeakHashMap\\",\\"slug\\":\\"_4-weakhashmap\\",\\"link\\":\\"#_4-weakhashmap\\",\\"children\\":[]},{\\"level\\":2,\\"title\\":\\"5. EnumMap类\\",\\"slug\\":\\"_5-enummap类\\",\\"link\\":\\"#_5-enummap类\\",\\"children\\":[]},{\\"level\\":2,\\"title\\":\\"6. IdentityHashMap 类\\",\\"slug\\":\\"_6-identityhashmap-类\\",\\"link\\":\\"#_6-identityhashmap-类\\",\\"children\\":[]},{\\"level\\":2,\\"title\\":\\"7. TreeMap类\\",\\"slug\\":\\"_7-treemap类\\",\\"link\\":\\"#_7-treemap类\\",\\"children\\":[]},{\\"level\\":2,\\"title\\":\\"8. Properties\\",\\"slug\\":\\"_8-properties\\",\\"link\\":\\"#_8-properties\\",\\"children\\":[]}],\\"git\\":{\\"createdTime\\":1626354214000,\\"updatedTime\\":1714204288000,\\"contributors\\":[{\\"name\\":\\"chua-n\\",\\"email\\":\\"chua_n@yeah.net\\",\\"commits\\":6}]},\\"readingTime\\":{\\"minutes\\":7.66,\\"words\\":2297},\\"filePathRelative\\":\\"Java/集合与流/Map.md\\",\\"localizedDate\\":\\"2020年8月8日\\",\\"excerpt\\":\\"<h2>1. Map接口</h2>\\\\n<h3>1.1 Map的方法</h3>\\\\n<p><code>Map</code> 也被称为字典/关联数组，<code>Map&lt;K, V&gt;</code> 接口中定义了如下常用的方法：</p>\\\\n<table>\\\\n<thead>\\\\n<tr>\\\\n<th>方法</th>\\\\n<th>作用</th>\\\\n</tr>\\\\n</thead>\\\\n<tbody>\\\\n<tr>\\\\n<td><code>V get(Object key)</code></td>\\\\n<td>返回指定 <code>key</code> 所对应的 <code>value</code>。若不存在该 <code>key</code>，返回 <code>null</code>。实现类可以禁止键为 <code>null</code>。</td>\\\\n</tr>\\\\n<tr>\\\\n<td><code>V put(K key, V value)</code></td>\\\\n<td>添加一个 key-value 对。若 <code>key</code> 已存在，会被覆盖</td>\\\\n</tr>\\\\n<tr>\\\\n<td><code>void putAll(Map&lt;? extends K, ? extends V&gt; entries)</code></td>\\\\n<td>将某 <code>Map</code> 中的 key-value 复制到本 <code>Map</code> 中</td>\\\\n</tr>\\\\n<tr>\\\\n<td><code>boolean containsKey(Object key)</code></td>\\\\n<td>查询是否包含指定的 <code>key</code></td>\\\\n</tr>\\\\n<tr>\\\\n<td><code>boolean containsValue(Object value)</code></td>\\\\n<td>查询是否包含指定的 <code>value</code>（可能存在多个）</td>\\\\n</tr>\\\\n<tr>\\\\n<td><code>boolean isEmpty()</code></td>\\\\n<td>查询是否为空</td>\\\\n</tr>\\\\n<tr>\\\\n<td><code>int size()</code></td>\\\\n<td>返回 key-value 对的数量</td>\\\\n</tr>\\\\n<tr>\\\\n<td><code>default void forEach(BiConsumer&lt;? super K, ? super V&gt; action)</code></td>\\\\n<td>对这个 <code>Map</code> 中的所有键/值对应用这个动作</td>\\\\n</tr>\\\\n<tr>\\\\n<td><code>void clear()</code></td>\\\\n<td>清空所有 key-value 对</td>\\\\n</tr>\\\\n<tr>\\\\n<td><code>V remove(Object key)</code></td>\\\\n<td>删除指定 key 所对应的 key-value 对，返回被删除 <code>key</code> 所关联的 <code>value</code>。若 <code>key</code> 不存在，返回 <code>null</code></td>\\\\n</tr>\\\\n<tr>\\\\n<td><code>default boolean remove(Object key, Object value)</code></td>\\\\n<td>删除指定 <code>key,value</code> 所对应的 key-value 对。若删除失败，返回 <code>false</code></td>\\\\n</tr>\\\\n</tbody>\\\\n</table>\\",\\"autoDesc\\":true}")\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///36979\n')},81021:(__unused_webpack_module,exports)=>{eval("var __webpack_unused_export__;\n\n__webpack_unused_export__ = ({ value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.A = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODEwMjEuanMiLCJtYXBwaW5ncyI6IjtBQUFhO0FBQ2IsNkJBQTZDLEVBQUUsYUFBYSxDQUFDO0FBQzdEO0FBQ0E7QUFDQSxTQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm90ZWJvb2svLi9ub2RlX21vZHVsZXMvLnBucG0vdnVlLWxvYWRlckAxNy40LjJfdnVlQDMuNS4xM193ZWJwYWNrQDUuOTcuMS9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9kaXN0L2V4cG9ydEhlbHBlci5qcz8yNmM5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8gcnVudGltZSBoZWxwZXIgZm9yIHNldHRpbmcgcHJvcGVydGllcyBvbiBjb21wb25lbnRzXG4vLyBpbiBhIHRyZWUtc2hha2FibGUgd2F5XG5leHBvcnRzLmRlZmF1bHQgPSAoc2ZjLCBwcm9wcykgPT4ge1xuICAgIGNvbnN0IHRhcmdldCA9IHNmYy5fX3ZjY09wdHMgfHwgc2ZjO1xuICAgIGZvciAoY29uc3QgW2tleSwgdmFsXSBvZiBwcm9wcykge1xuICAgICAgICB0YXJnZXRba2V5XSA9IHZhbDtcbiAgICB9XG4gICAgcmV0dXJuIHRhcmdldDtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///81021\n")}}]);