"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[65035],{40199:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  comp: () => (/* reexport */ String_StringBuilder_StringBuffer_html),\n  data: () => (/* binding */ data)\n});\n\n// EXTERNAL MODULE: ./node_modules/.pnpm/@vue+runtime-core@3.5.13/node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js\nvar runtime_core_esm_bundler = __webpack_require__(6254);\n;// ./node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.13_webpack@5.97.1/node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!./node_modules/.pnpm/@vuepress+bundler-webpack@2.0.0-rc.18/node_modules/@vuepress/bundler-webpack/dist/vuepress-ssr-loader.cjs!./node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.13_webpack@5.97.1/node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./book/.vuepress/.temp/pages/Java/基础类库/String、StringBuilder、StringBuffer类.html.vue?vue&type=template&id=1803bcc4\n\n\nfunction render(_ctx, _cache) {\n  return ((0,runtime_core_esm_bundler/* openBlock */.uX)(), (0,runtime_core_esm_bundler/* createElementBlock */.CE)("div", null, _cache[0] || (_cache[0] = [\n    (0,runtime_core_esm_bundler/* createStaticVNode */.Fv)("<p>Java 提供了 <code>String, StringBuffer, StringBuilder</code> 三个类来封装字符串，并提供了一系列方法。</p><ol><li><p><code>String</code> 类是不可变类，一旦一个 <code>String</code> 对象被创建，包含在这个对象中的字符序列是不可改变的，直至这个对象被销毁；</p></li><li><p><code>StringBuilder</code> 类的对象代表一个字符序列可变的字符串，当一个 <code>StringBuilder</code> 对象被创建以后，通过其提供的 <code>append(), insert(), reverse(), setCharAt(), setLength()</code> 等方法可以改变这个字符串对象的字符序列。一旦通过 <code>StringBuilder</code> 生成了最终想要的字符串，就可以调用它的 <code>toString()</code>方法将其转换为一个 <code>String</code> 对象。</p></li><li><p><code>StringBuffer</code> 类同 <code>StringBuilder</code> 类几乎一样，唯一的差别是，<code>StringBuilder</code> 是线程不安全的，而 <code>StringBuffer</code> 是线程安全的，因而性能略低。若不需考虑线程安全，通常会使用前者。</p></li></ol><p>所有字符串都实现了<code>CharSequence</code>接口。</p><h2 id=\\"string-类的构造方法\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#string-类的构造方法\\"><span>String 类的构造方法</span></a></h2><p><code>String</code> 类提供了大量构造器来创建 <code>String</code> 对象，如：</p><table><thead><tr><th>构造方法</th><th></th></tr></thead><tbody><tr><td>String()</td><td>创建&quot;&quot;</td></tr><tr><td>String(byte[] bytes, Charset charset)</td><td>使用指定的字符集将指定的 byte[]数组解码成一相新的 String 对象</td></tr><tr><td>String(byte[] bytes, int offset, int length)</td><td>使用平台的默认字符集将指定的 byte[]数组从 offset 开始的长度为 length 的子数组解码成一个新的 String 对象</td></tr><tr><td>String(byte[] bytes, int offset, int length, String charsetName)</td><td>同上，但使用指定的字符集</td></tr><tr><td>String(byte[] bytes, String charsetName)</td><td>使用指定的字符集将指定的 byte[]数组解码成一个新的 String 对象</td></tr><tr><td>String(char[] value, int offset, int count)</td><td>将指定的字符数组从 offset 开始，长度为 count 的字符元素连缀成字符串</td></tr><tr><td>String(String original)</td><td>根据字符串直接量来创建一个 String 对象，会是一个副本</td></tr><tr><td>String(StringBuilder builder)</td><td>根据 StringBuilder 对象来创建对应的 String 对象</td></tr><tr><td>String(StringBuffer buffer)</td><td>根据 StringBuffer 对象来创建对应的 String 对象</td></tr></tbody></table><h2 id=\\"string-类的方法\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#string-类的方法\\"><span>String 类的方法</span></a></h2><p><code>String</code> 类也提供了大量方法来操作字符串对象：</p><table><thead><tr><th>方法</th><th>作用</th></tr></thead><tbody><tr><td>int length()</td><td>返回当前字符串的长度</td></tr><tr><td>char charAt(int index)</td><td>获取字符串中指定位置的字符</td></tr><tr><td>boolean startsWith(String prefix)</td><td>判断字符串是否以 prefix 开始</td></tr><tr><td>boolean startsWith(String prefix, int toffset)</td><td>同上，但从 toffset 位置算起</td></tr><tr><td>boolean endsWidth(String suffix)</td><td>判断字符串是否以 suffix 结尾</td></tr><tr><td>String substring(int beginIndex)</td><td>获取从 beginIndex 位置开始到结束的子字符串</td></tr><tr><td>String substring(int beginIndex, int endIndex)</td><td>获取[beginIndex, endIndex)之间的字符串</td></tr><tr><td>String replace(char oldChar, char newChar)</td><td>将字符串中的第一个 oldChar 替换成 newChar，返回一个新字符串</td></tr><tr><td>byte[] getBytes()</td><td>将该 String 对象转换成 byte 数组</td></tr><tr><td>char[] toCharArray()</td><td>将该字符串转换为 char 数组</td></tr><tr><td>String toLowerCase()</td><td>将字符串转换成小写</td></tr><tr><td>String toUpperCase()</td><td>将字符串转换成大写</td></tr><tr><td>int indexOf(int ch)</td><td>找出 ch 字符在该字符串中第一次出现的位置</td></tr><tr><td>int indexOf(int ch, int fromIndex)</td><td>同上，但从 fromIndex 开始</td></tr><tr><td>int indexOf(String str)</td><td>找出 str 子字符串在该字符串中第一次出现的位置</td></tr><tr><td>int indexOf(String str, int fromIndex)</td><td>同上，但从 fromIndex 开始</td></tr><tr><td>int lastIndexOf(int ch)</td><td>找出 ch 字符在该字符串中最后一次出现的位置</td></tr><tr><td>int lastIndexOf(int ch, int fromIndex)</td><td>同上，但从 fromIndex 开始</td></tr><tr><td>int lastIndexOf(String str)</td><td>找出 str 子字符串在该字符串中最后一次出现的位置</td></tr><tr><td>int lastIndexOf(String str, int fromIndex)</td><td>同上，但从 fromIndex 开始</td></tr><tr><td>int compareTo(String anotherString)</td><td>比较两个字符串的大小： <br>1) 相等返回 0；<br>2) 不相等时，依次比较，返回第一个不相等的字符差；<br>3) 若较短字符串恰是较长字符串的首部，返回它们的长度差</td></tr><tr><td>String concat(String str)</td><td>连接两个字符串，同+运算</td></tr><tr><td>boolean contentEquals(StringBuffer sb)</td><td>与 StringBuffer 比较内容是否相同</td></tr><tr><td>static String copyValueOf(char[] data)</td><td>将字符数组连缀成字符串</td></tr><tr><td>static String copyValueOf(char[] int offset, int count)</td><td>将字符数组从 offset 开始的 count 个字符连缀成字符串</td></tr><tr><td>static String valueOf(X x)</td><td>一系列用于将基本类型值转换为 String 对象的方法</td></tr><tr><td>boolean equals(Object anObject)</td><td>将该字符串与指定对象比较，判断二者包含的字符序列是否相等</td></tr><tr><td>boolean equalsIgnoreCase(String str)</td><td>同上，但忽略大小写</td></tr><tr><td>void getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin)</td><td>将字符串从 srcBegin 开始，到 srcEnd 结束的字符复制到 dst 字符数组从 dstBegin 开始的位置中</td></tr><tr><td>static String join(CharSequence delimiter, CharSequence... elements)</td><td></td></tr><tr><td>String repeat(int count)</td><td></td></tr></tbody></table><h2 id=\\"stringbuilder-stringbuffer-的相关方法\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#stringbuilder-stringbuffer-的相关方法\\"><span>StringBuilder/StringBuffer 的相关方法</span></a></h2><table><thead><tr><th>方法</th><th>作用</th></tr></thead><tbody><tr><td>int length()</td><td>返回序列长度</td></tr><tr><td>int capacity()</td><td>返回容量</td></tr><tr><td>void setLength(int newLength)</td><td>设置序列长度为 newLength，超出的被截断，不足的补&quot;&quot;</td></tr><tr><td>public StringBxxx append(String s)</td><td>将指定的字符串追加到此序列</td></tr><tr><td>public StringBxxx.insert(int offset, String str)</td><td>将字符串 str 插入 offset 处的位置</td></tr><tr><td>public StringBxxx replace(int beginIndex, int endIndex, String str)</td><td>使用给定 String 中的字符替换此序列的[beginIndex, endIndex)中的字符</td></tr><tr><td>delete(int beginIndex, int endIndex)</td><td>删除[beginIndex, endIndex)中的字符</td></tr><tr><td>String toString()</td><td>返回一个与构造器或缓冲器内容相同的字符串</td></tr><tr><td>public StringBxxx reverse()</td><td>将此字符序列以其反转形式替代</td></tr></tbody></table><h2 id=\\"java-9-改动\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#java-9-改动\\"><span>Java 9 改动</span></a></h2><p>Java 9 改进了字符串的实现：在 Java 9 以前，字符串采用 <code>char[]</code> 数组来保存字符，因此字符串的每个字符占 2 字节；而 Java 9 的字符串采用 <code>byte[]</code>数组再加一个 <code>encoding-flag</code> 字段来保存字符，因此字符串的每个字符只占 1 字节。</p>", 13)\n  ])))\n}\n// EXTERNAL MODULE: ./node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.13_webpack@5.97.1/node_modules/vue-loader/dist/exportHelper.js\nvar exportHelper = __webpack_require__(81021);\n;// ./book/.vuepress/.temp/pages/Java/基础类库/String、StringBuilder、StringBuffer类.html.vue\n\nconst script = {}\n\n;\nconst __exports__ = /*#__PURE__*/(0,exportHelper/* default */.A)(script, [[\'render\',render]])\n\n/* harmony default export */ const String_StringBuilder_StringBuffer_html = (__exports__);\n;// ./book/.vuepress/.temp/pages/Java/基础类库/String、StringBuilder、StringBuffer类.html.js\n\nconst data = JSON.parse("{\\"path\\":\\"/Java/%E5%9F%BA%E7%A1%80%E7%B1%BB%E5%BA%93/String%E3%80%81StringBuilder%E3%80%81StringBuffer%E7%B1%BB.html\\",\\"title\\":\\"String、StringBuilder、StringBuffer类\\",\\"lang\\":\\"zh-CN\\",\\"frontmatter\\":{\\"title\\":\\"String、StringBuilder、StringBuffer类\\",\\"description\\":\\"Java 提供了 String, StringBuffer, StringBuilder 三个类来封装字符串，并提供了一系列方法。 String 类是不可变类，一旦一个 String 对象被创建，包含在这个对象中的字符序列是不可改变的，直至这个对象被销毁； StringBuilder 类的对象代表一个字符序列可变的字符串，当一个 StringBuild...\\",\\"head\\":[[\\"meta\\",{\\"property\\":\\"og:url\\",\\"content\\":\\"https://chua-n.com/Java/%E5%9F%BA%E7%A1%80%E7%B1%BB%E5%BA%93/String%E3%80%81StringBuilder%E3%80%81StringBuffer%E7%B1%BB.html\\"}],[\\"meta\\",{\\"property\\":\\"og:site_name\\",\\"content\\":\\"荒流的笔趣屋\\"}],[\\"meta\\",{\\"property\\":\\"og:title\\",\\"content\\":\\"String、StringBuilder、StringBuffer类\\"}],[\\"meta\\",{\\"property\\":\\"og:description\\",\\"content\\":\\"Java 提供了 String, StringBuffer, StringBuilder 三个类来封装字符串，并提供了一系列方法。 String 类是不可变类，一旦一个 String 对象被创建，包含在这个对象中的字符序列是不可改变的，直至这个对象被销毁； StringBuilder 类的对象代表一个字符序列可变的字符串，当一个 StringBuild...\\"}],[\\"meta\\",{\\"property\\":\\"og:type\\",\\"content\\":\\"article\\"}],[\\"meta\\",{\\"property\\":\\"og:locale\\",\\"content\\":\\"zh-CN\\"}],[\\"meta\\",{\\"property\\":\\"og:updated_time\\",\\"content\\":\\"2024-04-27T05:15:18.000Z\\"}],[\\"meta\\",{\\"property\\":\\"article:modified_time\\",\\"content\\":\\"2024-04-27T05:15:18.000Z\\"}],[\\"script\\",{\\"type\\":\\"application/ld+json\\"},\\"{\\\\\\"@context\\\\\\":\\\\\\"https://schema.org\\\\\\",\\\\\\"@type\\\\\\":\\\\\\"Article\\\\\\",\\\\\\"headline\\\\\\":\\\\\\"String、StringBuilder、StringBuffer类\\\\\\",\\\\\\"image\\\\\\":[\\\\\\"\\\\\\"],\\\\\\"dateModified\\\\\\":\\\\\\"2024-04-27T05:15:18.000Z\\\\\\",\\\\\\"author\\\\\\":[{\\\\\\"@type\\\\\\":\\\\\\"Person\\\\\\",\\\\\\"name\\\\\\":\\\\\\"荒流\\\\\\",\\\\\\"url\\\\\\":\\\\\\"https://chua-n.com\\\\\\",\\\\\\"email\\\\\\":\\\\\\"chua_n@qq.com\\\\\\"}]}\\"]]},\\"headers\\":[{\\"level\\":2,\\"title\\":\\"String 类的构造方法\\",\\"slug\\":\\"string-类的构造方法\\",\\"link\\":\\"#string-类的构造方法\\",\\"children\\":[]},{\\"level\\":2,\\"title\\":\\"String 类的方法\\",\\"slug\\":\\"string-类的方法\\",\\"link\\":\\"#string-类的方法\\",\\"children\\":[]},{\\"level\\":2,\\"title\\":\\"StringBuilder/StringBuffer 的相关方法\\",\\"slug\\":\\"stringbuilder-stringbuffer-的相关方法\\",\\"link\\":\\"#stringbuilder-stringbuffer-的相关方法\\",\\"children\\":[]},{\\"level\\":2,\\"title\\":\\"Java 9 改动\\",\\"slug\\":\\"java-9-改动\\",\\"link\\":\\"#java-9-改动\\",\\"children\\":[]}],\\"git\\":{\\"createdTime\\":1626354214000,\\"updatedTime\\":1714194918000,\\"contributors\\":[{\\"name\\":\\"chua-n\\",\\"email\\":\\"chua_n@yeah.net\\",\\"commits\\":3}]},\\"readingTime\\":{\\"minutes\\":4.56,\\"words\\":1368},\\"filePathRelative\\":\\"Java/基础类库/String、StringBuilder、StringBuffer类.md\\",\\"localizedDate\\":\\"2021年7月15日\\",\\"excerpt\\":\\"<p>Java 提供了 <code>String, StringBuffer, StringBuilder</code> 三个类来封装字符串，并提供了一系列方法。</p>\\\\n<ol>\\\\n<li>\\\\n<p><code>String</code> 类是不可变类，一旦一个 <code>String</code> 对象被创建，包含在这个对象中的字符序列是不可改变的，直至这个对象被销毁；</p>\\\\n</li>\\\\n<li>\\\\n<p><code>StringBuilder</code> 类的对象代表一个字符序列可变的字符串，当一个 <code>StringBuilder</code> 对象被创建以后，通过其提供的 <code>append(), insert(), reverse(), setCharAt(), setLength()</code> 等方法可以改变这个字符串对象的字符序列。一旦通过 <code>StringBuilder</code> 生成了最终想要的字符串，就可以调用它的 <code>toString()</code>方法将其转换为一个 <code>String</code> 对象。</p>\\\\n</li>\\\\n<li>\\\\n<p><code>StringBuffer</code> 类同 <code>StringBuilder</code> 类几乎一样，唯一的差别是，<code>StringBuilder</code> 是线程不安全的，而 <code>StringBuffer</code> 是线程安全的，因而性能略低。若不需考虑线程安全，通常会使用前者。</p>\\\\n</li>\\\\n</ol>\\",\\"autoDesc\\":true}")\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///40199\n')},81021:(__unused_webpack_module,exports)=>{eval("var __webpack_unused_export__;\n\n__webpack_unused_export__ = ({ value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.A = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODEwMjEuanMiLCJtYXBwaW5ncyI6IjtBQUFhO0FBQ2IsNkJBQTZDLEVBQUUsYUFBYSxDQUFDO0FBQzdEO0FBQ0E7QUFDQSxTQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm90ZWJvb2svLi9ub2RlX21vZHVsZXMvLnBucG0vdnVlLWxvYWRlckAxNy40LjJfdnVlQDMuNS4xM193ZWJwYWNrQDUuOTcuMS9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9kaXN0L2V4cG9ydEhlbHBlci5qcz8yNmM5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8gcnVudGltZSBoZWxwZXIgZm9yIHNldHRpbmcgcHJvcGVydGllcyBvbiBjb21wb25lbnRzXG4vLyBpbiBhIHRyZWUtc2hha2FibGUgd2F5XG5leHBvcnRzLmRlZmF1bHQgPSAoc2ZjLCBwcm9wcykgPT4ge1xuICAgIGNvbnN0IHRhcmdldCA9IHNmYy5fX3ZjY09wdHMgfHwgc2ZjO1xuICAgIGZvciAoY29uc3QgW2tleSwgdmFsXSBvZiBwcm9wcykge1xuICAgICAgICB0YXJnZXRba2V5XSA9IHZhbDtcbiAgICB9XG4gICAgcmV0dXJuIHRhcmdldDtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///81021\n")}}]);