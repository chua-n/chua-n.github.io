"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[70202],{64193:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  comp: () => (/* reexport */ _html),\n  data: () => (/* binding */ data)\n});\n\n// EXTERNAL MODULE: ./node_modules/.pnpm/@vue+runtime-core@3.5.13/node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js\nvar runtime_core_esm_bundler = __webpack_require__(6254);\n;// ./node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.13_webpack@5.97.1/node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!./node_modules/.pnpm/@vuepress+bundler-webpack@2.0.0-rc.18/node_modules/@vuepress/bundler-webpack/dist/vuepress-ssr-loader.cjs!./node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.13_webpack@5.97.1/node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./book/.vuepress/.temp/pages/Python/pandas/缺失值处理.html.vue?vue&type=template&id=7841daf2\n\n\nfunction render(_ctx, _cache) {\n  return ((0,runtime_core_esm_bundler/* openBlock */.uX)(), (0,runtime_core_esm_bundler/* createElementBlock */.CE)("div", null, _cache[0] || (_cache[0] = [\n    (0,runtime_core_esm_bundler/* createStaticVNode */.Fv)("<h2 id=\\"缺失值处理的方法\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#缺失值处理的方法\\"><span>缺失值处理的方法</span></a></h2><p>此处涉及的缺失值主要有三种形式：<code>null, NaN, NA(not available)</code>。</p><p>处理缺失值的方法一般可分为两种：掩码法、标签值法。</p><blockquote><p>使用单独的掩码数组会额外出现一个布尔类型数组，从而增加存储与计算的负担；而标签值方法缩小了可以被表示为有效值的范围，可能需要在 CPU 或 GPU 算术逻辑单元中增加额外的（往往也不是最优的）计算逻辑。通常使用的 NaN 也不能表示所有数据类型。</p></blockquote><ol><li><p><strong>掩码法</strong>是通过一个覆盖全局的掩码表示缺失值。掩码可能是一个与原数组维度相同的完整布尔类型数组，也可能是用一个比特（0 或 1）表示有缺失值的局部状态。</p></li><li><p><strong>标签值法</strong>是用一个标签值表示缺失值。标签值可能是具体的数据（例如用-9999 表示缺失的整数），也可能是些极少出现的形式。标签值还可能是更全局的值，比如用 NaN（不是一个数）表示缺失的浮点数，它是 IEEE 浮点数规范中指定的特殊字符。</p></li></ol><h2 id=\\"pandas的缺失值处理\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#pandas的缺失值处理\\"><span>Pandas的缺失值处理</span></a></h2><p>Pandas 最终选用<strong>标签值法</strong>表示缺失值，包括两种 Python 原有的缺失值：浮点数据类型的 <code>NaN</code> 值，以及 Python 的 <code>None</code> 对象。</p><ul><li><p><code>None</code>：Python 对象类型的缺失值</p><ul><li><code>None</code> 是一个 Python 单体对象，经常在代码中表示缺失值。</li><li>由于是对象，所以它不能作为任何 NumPy 或 Pandas 数组类型的缺失值，只能用于<code>object</code>数组类型（即由 Python 对象构成的数组）。</li><li>这种类型的数组任何操作最终都会在 Python 层面完成，所以要比其他原生类型数组消耗更多资源。</li></ul><figure><img src=\\"https://figure-bed.chua-n.com/Python/344.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure></li><li><p><code>NaN</code>：数值类型的缺失值</p><ul><li>Not a Number，是一种按照 IEEE 浮点数标准设计、在任何系统中都兼容的特殊浮点数。</li><li>可以把 <code>NaN</code> 看作是一个数据类病毒——它会将与它接触过的数据同化，即无论和 <code>NaN</code> 进行何种操作，最终结果都是 <code>NaN</code>。</li></ul><figure><img src=\\"https://figure-bed.chua-n.com/Python/345.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure><figure><img src=\\"https://figure-bed.chua-n.com/Python/346.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure><figure><img src=\\"https://figure-bed.chua-n.com/Python/347.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure></li><li><p>Pandas 中 <code>NaN</code> 与 <code>None</code> 的差异：Pandas 把 NaN 和 None 看成是可以等价交换的，在适当的时候会将两者进行替换：</p><figure><img src=\\"https://figure-bed.chua-n.com/Python/348.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure></li><li><p>Pandas 中不同类型缺失值的转换规则</p><blockquote><p>再次提醒：Pandas 中字符串类型通常是用 <code>object</code> 类型存储的。</p></blockquote><figure><img src=\\"https://figure-bed.chua-n.com/Python/349.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure></li></ul><h2 id=\\"处理缺失值的相关方法\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#处理缺失值的相关方法\\"><span>处理缺失值的相关方法</span></a></h2><table><thead><tr><th style=\\"text-align:center;\\">缺失值处理方法</th><th style=\\"text-align:center;\\">说明</th><th style=\\"text-align:center;\\"></th></tr></thead><tbody><tr><td style=\\"text-align:center;\\">isnull()</td><td style=\\"text-align:center;\\">创建一个布尔类型的掩码标签缺失值</td><td style=\\"text-align:center;\\"></td></tr><tr><td style=\\"text-align:center;\\">notnull()</td><td style=\\"text-align:center;\\">与 isnull()操作相对</td><td style=\\"text-align:center;\\"></td></tr><tr><td style=\\"text-align:center;\\">dropna()</td><td style=\\"text-align:center;\\">返回一个剔除缺失值的数据</td><td style=\\"text-align:center;\\">DataFrame 中使用需要设置一些参数</td></tr><tr><td style=\\"text-align:center;\\">fillna()</td><td style=\\"text-align:center;\\">返回一个填充了缺失值的数据副本</td><td style=\\"text-align:center;\\">可选参数 method=&#39;ffill&#39; 或&#39;bfill&#39;</td></tr></tbody></table><ul><li><p>对于 <code>dropna()</code>方法：</p><ul><li><p>默认情况下，<code>dropna()</code>会剔除任何包含缺失值的整行数据</p></li><li><p>可以设置按不同的坐标轴剔除缺失值，如 <code>axis=1</code>(或 <code>axis=&#39;columns&#39;</code>)会剔除任何包含缺失值的整列数据</p></li><li><p>默认设置是 <code>how=&#39;any&#39;</code>，即只要有缺失值就剔除整行或整列。可设置为 <code>how=&#39;all&#39;</code>，则只会剔除全部是缺失值的行或列。</p></li><li><p>可以通过 <code>thresh</code> 参数设置行或列中非缺失值的最小数量</p><table><thead><tr><th>图片</th><th>图片</th><th>图片</th></tr></thead><tbody><tr><td><img src=\\"https://figure-bed.chua-n.com/Python/350.png\\" alt=\\"NaN \\" loading=\\"lazy\\"></td><td><img src=\\"https://figure-bed.chua-n.com/Python/351.png\\" alt=\\"df . dropna() \\" loading=\\"lazy\\"></td><td><img src=\\"https://figure-bed.chua-n.com/Python/352.png\\" alt=\\"image-20220121130343578\\" loading=\\"lazy\\"></td></tr><tr><td><img src=\\"https://figure-bed.chua-n.com/Python/353.png\\" alt=\\"df[3] -  nan  NaN  4.6  2 Nan  5 Nan  6 Nan \\" loading=\\"lazy\\"></td><td><img src=\\"https://figure-bed.chua-n.com/Python/354.png\\" alt=\\"• . sump Jp \\" loading=\\"lazy\\"><br><img src=\\"https://figure-bed.chua-n.com/Python/355.png\\" alt=\\"1.9  3.6 \\" loading=\\"lazy\\"></td><td><img src=\\"https://figure-bed.chua-n.com/Python/356.png\\" alt=\\"In[22]: thresh=3)  Outt22J:  1 5 NaN \\" loading=\\"lazy\\"></td></tr></tbody></table></li></ul></li><li><p>对于 <code>fillna()</code>方法：</p><ul><li><p>可用一个单独的值来填充缺失值</p></li><li><p>可用缺失值前面的有效值来从前往后填充(forward-fill)</p></li><li><p>可用缺失值后面的有效值来从后往前填充(back-fill)</p></li><li><p><code>DataFrame</code> 的操作方法与 <code>Series</code> 类似，只是填充时可能需要设置 <code>axis</code> 参数</p></li><li><p>注意，假如从前往后填充时，需要填充的缺失值前面没有值，那以它填充后仍然是缺失值</p><table><thead><tr><th>图片</th><th>图片</th><th>图片</th><th>图片</th></tr></thead><tbody><tr><td><img src=\\"https://figure-bed.chua-n.com/Python/357.png\\" alt=\\"image-20220121130616010\\" loading=\\"lazy\\"></td><td><img src=\\"https://figure-bed.chua-n.com/Python/358.png\\" alt=\\"\\" loading=\\"lazy\\"></td><td><img src=\\"https://figure-bed.chua-n.com/Python/359.png\\" alt=\\"\\" loading=\\"lazy\\"></td><td><img src=\\"https://figure-bed.chua-n.com/Python/360.png\\" alt=\\"\\" loading=\\"lazy\\"></td></tr><tr><td><img src=\\"https://figure-bed.chua-n.com/Python/361.png\\" alt=\\"\\" loading=\\"lazy\\"></td><td><img src=\\"https://figure-bed.chua-n.com/Python/362.png\\" alt=\\"\\" loading=\\"lazy\\"></td><td></td><td></td></tr></tbody></table></li></ul></li></ul>", 11)\n  ])))\n}\n// EXTERNAL MODULE: ./node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.13_webpack@5.97.1/node_modules/vue-loader/dist/exportHelper.js\nvar exportHelper = __webpack_require__(81021);\n;// ./book/.vuepress/.temp/pages/Python/pandas/缺失值处理.html.vue\n\nconst script = {}\n\n;\nconst __exports__ = /*#__PURE__*/(0,exportHelper/* default */.A)(script, [[\'render\',render]])\n\n/* harmony default export */ const _html = (__exports__);\n;// ./book/.vuepress/.temp/pages/Python/pandas/缺失值处理.html.js\n\nconst data = JSON.parse("{\\"path\\":\\"/Python/pandas/%E7%BC%BA%E5%A4%B1%E5%80%BC%E5%A4%84%E7%90%86.html\\",\\"title\\":\\"缺失值处理\\",\\"lang\\":\\"zh-CN\\",\\"frontmatter\\":{\\"title\\":\\"缺失值处理\\",\\"date\\":\\"2019-04-15T00:00:00.000Z\\",\\"description\\":\\"缺失值处理的方法 此处涉及的缺失值主要有三种形式：null, NaN, NA(not available)。 处理缺失值的方法一般可分为两种：掩码法、标签值法。 使用单独的掩码数组会额外出现一个布尔类型数组，从而增加存储与计算的负担；而标签值方法缩小了可以被表示为有效值的范围，可能需要在 CPU 或 GPU 算术逻辑单元中增加额外的（往往也不是最优的）...\\",\\"head\\":[[\\"meta\\",{\\"property\\":\\"og:url\\",\\"content\\":\\"https://chua-n.com/Python/pandas/%E7%BC%BA%E5%A4%B1%E5%80%BC%E5%A4%84%E7%90%86.html\\"}],[\\"meta\\",{\\"property\\":\\"og:site_name\\",\\"content\\":\\"荒流的笔趣屋\\"}],[\\"meta\\",{\\"property\\":\\"og:title\\",\\"content\\":\\"缺失值处理\\"}],[\\"meta\\",{\\"property\\":\\"og:description\\",\\"content\\":\\"缺失值处理的方法 此处涉及的缺失值主要有三种形式：null, NaN, NA(not available)。 处理缺失值的方法一般可分为两种：掩码法、标签值法。 使用单独的掩码数组会额外出现一个布尔类型数组，从而增加存储与计算的负担；而标签值方法缩小了可以被表示为有效值的范围，可能需要在 CPU 或 GPU 算术逻辑单元中增加额外的（往往也不是最优的）...\\"}],[\\"meta\\",{\\"property\\":\\"og:type\\",\\"content\\":\\"article\\"}],[\\"meta\\",{\\"property\\":\\"og:image\\",\\"content\\":\\"https://figure-bed.chua-n.com/Python/344.png\\"}],[\\"meta\\",{\\"property\\":\\"og:locale\\",\\"content\\":\\"zh-CN\\"}],[\\"meta\\",{\\"property\\":\\"og:updated_time\\",\\"content\\":\\"2024-04-13T02:18:27.000Z\\"}],[\\"meta\\",{\\"property\\":\\"article:published_time\\",\\"content\\":\\"2019-04-15T00:00:00.000Z\\"}],[\\"meta\\",{\\"property\\":\\"article:modified_time\\",\\"content\\":\\"2024-04-13T02:18:27.000Z\\"}],[\\"script\\",{\\"type\\":\\"application/ld+json\\"},\\"{\\\\\\"@context\\\\\\":\\\\\\"https://schema.org\\\\\\",\\\\\\"@type\\\\\\":\\\\\\"Article\\\\\\",\\\\\\"headline\\\\\\":\\\\\\"缺失值处理\\\\\\",\\\\\\"image\\\\\\":[\\\\\\"https://figure-bed.chua-n.com/Python/344.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/345.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/346.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/347.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/348.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/349.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/350.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/351.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/352.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/353.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/354.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/355.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/356.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/357.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/358.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/359.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/360.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/361.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/362.png\\\\\\"],\\\\\\"datePublished\\\\\\":\\\\\\"2019-04-15T00:00:00.000Z\\\\\\",\\\\\\"dateModified\\\\\\":\\\\\\"2024-04-13T02:18:27.000Z\\\\\\",\\\\\\"author\\\\\\":[{\\\\\\"@type\\\\\\":\\\\\\"Person\\\\\\",\\\\\\"name\\\\\\":\\\\\\"荒流\\\\\\",\\\\\\"url\\\\\\":\\\\\\"https://chua-n.com\\\\\\",\\\\\\"email\\\\\\":\\\\\\"chua_n@qq.com\\\\\\"}]}\\"]]},\\"headers\\":[{\\"level\\":2,\\"title\\":\\"缺失值处理的方法\\",\\"slug\\":\\"缺失值处理的方法\\",\\"link\\":\\"#缺失值处理的方法\\",\\"children\\":[]},{\\"level\\":2,\\"title\\":\\"Pandas的缺失值处理\\",\\"slug\\":\\"pandas的缺失值处理\\",\\"link\\":\\"#pandas的缺失值处理\\",\\"children\\":[]},{\\"level\\":2,\\"title\\":\\"处理缺失值的相关方法\\",\\"slug\\":\\"处理缺失值的相关方法\\",\\"link\\":\\"#处理缺失值的相关方法\\",\\"children\\":[]}],\\"git\\":{\\"createdTime\\":1642783596000,\\"updatedTime\\":1712974707000,\\"contributors\\":[{\\"name\\":\\"chua-n\\",\\"email\\":\\"chua_n@yeah.net\\",\\"commits\\":5}]},\\"readingTime\\":{\\"minutes\\":3.7,\\"words\\":1109},\\"filePathRelative\\":\\"Python/pandas/缺失值处理.md\\",\\"localizedDate\\":\\"2019年4月15日\\",\\"excerpt\\":\\"<h2>缺失值处理的方法</h2>\\\\n<p>此处涉及的缺失值主要有三种形式：<code>null, NaN, NA(not available)</code>。</p>\\\\n<p>处理缺失值的方法一般可分为两种：掩码法、标签值法。</p>\\\\n<blockquote>\\\\n<p>使用单独的掩码数组会额外出现一个布尔类型数组，从而增加存储与计算的负担；而标签值方法缩小了可以被表示为有效值的范围，可能需要在 CPU 或 GPU 算术逻辑单元中增加额外的（往往也不是最优的）计算逻辑。通常使用的 NaN 也不能表示所有数据类型。</p>\\\\n</blockquote>\\\\n<ol>\\\\n<li>\\\\n<p><strong>掩码法</strong>是通过一个覆盖全局的掩码表示缺失值。掩码可能是一个与原数组维度相同的完整布尔类型数组，也可能是用一个比特（0 或 1）表示有缺失值的局部状态。</p>\\\\n</li>\\\\n<li>\\\\n<p><strong>标签值法</strong>是用一个标签值表示缺失值。标签值可能是具体的数据（例如用-9999 表示缺失的整数），也可能是些极少出现的形式。标签值还可能是更全局的值，比如用 NaN（不是一个数）表示缺失的浮点数，它是 IEEE 浮点数规范中指定的特殊字符。</p>\\\\n</li>\\\\n</ol>\\",\\"autoDesc\\":true}")\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///64193\n')},81021:(__unused_webpack_module,exports)=>{eval("var __webpack_unused_export__;\n\n__webpack_unused_export__ = ({ value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.A = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODEwMjEuanMiLCJtYXBwaW5ncyI6IjtBQUFhO0FBQ2IsNkJBQTZDLEVBQUUsYUFBYSxDQUFDO0FBQzdEO0FBQ0E7QUFDQSxTQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm90ZWJvb2svLi9ub2RlX21vZHVsZXMvLnBucG0vdnVlLWxvYWRlckAxNy40LjJfdnVlQDMuNS4xM193ZWJwYWNrQDUuOTcuMS9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9kaXN0L2V4cG9ydEhlbHBlci5qcz8yNmM5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8gcnVudGltZSBoZWxwZXIgZm9yIHNldHRpbmcgcHJvcGVydGllcyBvbiBjb21wb25lbnRzXG4vLyBpbiBhIHRyZWUtc2hha2FibGUgd2F5XG5leHBvcnRzLmRlZmF1bHQgPSAoc2ZjLCBwcm9wcykgPT4ge1xuICAgIGNvbnN0IHRhcmdldCA9IHNmYy5fX3ZjY09wdHMgfHwgc2ZjO1xuICAgIGZvciAoY29uc3QgW2tleSwgdmFsXSBvZiBwcm9wcykge1xuICAgICAgICB0YXJnZXRba2V5XSA9IHZhbDtcbiAgICB9XG4gICAgcmV0dXJuIHRhcmdldDtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///81021\n")}}]);