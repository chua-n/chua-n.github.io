"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[62875],{2780:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  comp: () => (/* reexport */ regex_html),\n  data: () => (/* binding */ data)\n});\n\n// EXTERNAL MODULE: ./node_modules/.pnpm/@vue+runtime-core@3.5.13/node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js\nvar runtime_core_esm_bundler = __webpack_require__(6254);\n;// ./node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.13_webpack@5.97.1/node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!./node_modules/.pnpm/@vuepress+bundler-webpack@2.0.0-rc.18/node_modules/@vuepress/bundler-webpack/dist/vuepress-ssr-loader.cjs!./node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.13_webpack@5.97.1/node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./book/.vuepress/.temp/pages/Python/标准库/regex.html.vue?vue&type=template&id=1e752206\n\n\nfunction render(_ctx, _cache) {\n  return ((0,runtime_core_esm_bundler/* openBlock */.uX)(), (0,runtime_core_esm_bundler/* createElementBlock */.CE)("div", null, _cache[0] || (_cache[0] = [\n    (0,runtime_core_esm_bundler/* createStaticVNode */.Fv)("<h2 id=\\"_1-概要\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#_1-概要\\"><span>1. 概要</span></a></h2><p><strong>正则表达式(Regular Expression, Regex)</strong> 用于文本内容的查找和替换。</p><p>Python 中所有正则表达式的函数都在标准库 re 中，故要 import re。</p><p>正则表达式的一般匹配步骤：</p><ol><li><code>import re</code></li><li>用 <code>re.compile()</code>函数将正则表达式的样式编译为一个<code>Regex</code>对象，可以用于匹配</li><li>向 <code>Regex</code> 对象的 <code>search()</code>方法传入想查找的字符串，它返回一个<code>Match</code>对象</li><li>调用 <code>Match</code> 对象的 <code>group()</code>方法，返回实际匹配文本的字符串。</li></ol><p>向 <code>re.compile()</code>传入一个表示<code>Regex</code>的字符串值，它将返回一个 <code>Regex</code> 模式对象。注意：</p><ol><li><p>这意味着，<code>re.compile()</code>接收的是一个 Python 字符串，而由于 Python 字符串本身可能存在转义（且 Python 和 Regex 一样使用<code>\\\\</code>来转义），即假设你传进去的字符串为 <code>&#39;abc\\\\\\\\&#39;</code>（5 个字符），它在 Python 中表示的实际上是<code>&#39;abc\\\\&#39;</code> （4 个字符），故 <code>re.compile()</code>函数实际接收到的也是后者。</p></li><li><p>所以为了保持一致性，最好在表示 <code>Regex</code> 的字符串前均加上 <code>r</code> 来禁止 Python 转义，此后 <code>re.compile()</code>接收到你传入的字符串后就会进行 <code>Regex</code> 的解析，即碰到&#39;&#39;字符时将其视为 <code>Regex</code> 的转义符，以 <code>Regex</code> 规则来进行识别。</p></li></ol><p>传递给 <code>re.compile()</code>的原始字符串中，<code>\\\\(</code> 和 <code>\\\\)</code> 转义字符将匹配实际的括号字符。</p><figure><img src=\\"https://figure-bed.chua-n.com/Python/270.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure><p>添加括号<code>()</code>将在正则表达式中创建<strong>分组</strong>，如<code>(\\\\d\\\\d\\\\d)-(\\\\d\\\\d\\\\d-\\\\d\\\\d\\\\d\\\\d)</code>。其中将第一对括号称为第 1 组，第二对括号是第 2 组。</p><p>Python 的 <code>Regex</code> 默认是<strong>贪心</strong>的，这表示在有二义的情况下，它们会尽可能匹配最长的字符串。可使用问号<code>?</code>来声明使用<strong>非贪心</strong>匹配，即匹配尽可能最短的字符串：</p><figure><img src=\\"https://figure-bed.chua-n.com/Python/271.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure><h2 id=\\"_2-re-compile-函数\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#_2-re-compile-函数\\"><span>2. re.compile()函数</span></a></h2><p><code>re.compile()</code>的第二参数：</p><ul><li><p><code>re.IGNORECASE</code> 或 <code>re.I</code>: 让正则表达式匹配不区分大小写</p></li><li><p><code>re.DOTALL</code>: 结合使用 <code>.*</code> 与 <code>re.DOTALL</code>，可以让句点字符匹配所有字符，包括换行字符</p><figure><img src=\\"https://figure-bed.chua-n.com/Python/272-1.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure><figure><img src=\\"https://figure-bed.chua-n.com/Python/272-2.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure></li><li><p><code>re.VERBOSE</code>: 让 re.compile()忽略正则表达式字符串中的空白符和注释，从而可以管理复杂的正则表达式。</p><blockquote><p>Regex 中字符串的注释规则与 python 代码一样。</p></blockquote><figure><img src=\\"https://figure-bed.chua-n.com/Python/273-1.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure><figure><img src=\\"https://figure-bed.chua-n.com/Python/273-2.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure></li></ul><p><code>re.compile()</code>函数只接受一个值作为它的第二个参数，即<code>re.I, re.DOTALL, re.VERBOSE</code>只能在函数中出现一个，那么如何同时满足这些参数所能达到的功能呢？</p><ul><li><p>这时就可以用管道字符来将他们结合起来，管道字符在这里称为“<strong>按位或</strong>”操作符。</p></li><li><p>如，希望 Regex 不区分大小写，并且句点字符匹配换行，就可以这样构造 re.compile()函数：</p><div class=\\"language-python line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"python\\" data-title=\\"python\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF;\\">someRegexValue </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2;\\">=</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF;\\"> re.</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#61AFEF;\\">compile</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF;\\">(</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379;\\">&#39;foo&#39;</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF;\\">, re.</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#D19A66;\\">IGNORECASE</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2;\\"> |</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF;\\"> re.</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#D19A66;\\">DOTALL</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF;\\">)</span></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0;\\"><div class=\\"line-number\\"></div></div></div></li></ul><h3 id=\\"管道\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#管道\\"><span>管道</span></a></h3><p>用管道匹配多个分组，字符|代表管道，意味着匹配许多表达式中的一个，类似于逻辑“或”：</p><figure><img src=\\"https://figure-bed.chua-n.com/Python/285.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure><p>也可以用管道来匹配多个模式中的一个，作为正则表达式的一部分，如以下意味着试图匹配 Batman、Batmobile、Batcopter、Batbat 中任意一个：</p><figure><img src=\\"https://figure-bed.chua-n.com/Python/286.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure><h2 id=\\"_3-regex-对象\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#_3-regex-对象\\"><span>3. Regex 对象</span></a></h2><p>Regex 对象的方法:</p><ul><li><p><code>.search()</code>: 查找传入的字符串，寻找该正则表达式的所有匹配。返回一个 Match 对象或 None，其对应第一次匹配的文本</p><figure><img src=\\"https://figure-bed.chua-n.com/Python/274.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure></li><li><p><code>.findall()</code></p><ul><li><p>若 Regex 对象无分组：返回一个字符串列表，包含被查找字符串中的所有匹配；</p><figure><img src=\\"https://figure-bed.chua-n.com/Python/275.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure></li><li><p>若 Regex 对象有分组：返回元组的列表，每个元组表示一个找到的匹配，其中的项就是 Regex 中每个分组的匹配字符串。</p><figure><img src=\\"https://figure-bed.chua-n.com/Python/276.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure></li></ul></li><li><p><code>.sub()</code>: 用新的文本替换掉匹配的文本模式。</p><ul><li><p>需要两个参数，第一个是一个字符串，用于取代发现的匹配；第 2 个是一个字符串，即正则表达式。返回值为替换完成后的字符串。</p><figure><img src=\\"https://figure-bed.chua-n.com/Python/277.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure></li><li><p>有时候你可能需要使用匹配的文本本身作为替换的一部分。在 sub()的第 1 个参数中，可以输入\\\\1, \\\\2, \\\\3……表示在替换中输入分组 1, 2, 3 的文本：</p><figure><img src=\\"https://figure-bed.chua-n.com/Python/278.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure></li></ul></li></ul><h2 id=\\"_4-match-对象\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#_4-match-对象\\"><span>4. Match 对象</span></a></h2><blockquote><p>常用变量名 mo 代表一个 Match 对象</p></blockquote><p>Match 对象的方法:</p><ul><li><p><code>.group()</code>: 返回被查找字符串中实际匹配的文本。</p><ul><li><p>其不带参数或传入参数值 0，返回值为整个匹配的文本；</p></li><li><p>传入参数 1 或 2，代表着返回第 1 或第 2 分组的匹配文本。</p><figure><img src=\\"https://figure-bed.chua-n.com/Python/279-1.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure><figure><img src=\\"https://figure-bed.chua-n.com/Python/279-2.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure></li></ul></li><li><p><code>.groups()</code>：一次获取所有的分组，返回值为多个值的元组。</p><figure><img src=\\"https://figure-bed.chua-n.com/Python/280.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure></li></ul><h2 id=\\"_5-re-函数\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#_5-re-函数\\"><span>5. re.*函数</span></a></h2><p>参见官方标准库文档。</p><p>函数<code>re.split()</code>是非常实用的，因为它允许你为分隔符指定多个正则模式。不过当你使用<code>re.split()</code>函数时，需要特别注意正则表达式中是否包含一个括号捕获分组，若使用了捕获分组，那么被匹配的文本也将出现在结果列表中。</p><figure><img src=\\"https://figure-bed.chua-n.com/Python/281.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure><figure><img src=\\"https://figure-bed.chua-n.com/Python/282.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure><p>字符串搜索和替换：</p><ul><li><p>对于复杂模式，使用<code>re.sub()</code>函数，其第一个参数是被匹配的模式，第二个参数是替换模式</p><figure><img src=\\"https://figure-bed.chua-n.com/Python/283.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure><blockquote><p>其中反斜杠数字比如<code>\\\\3</code>指向前面模式的捕获组号。</p></blockquote></li><li><p>如果除了替换后的结果外，还需要知道有多少替换发生了，使用<code>re.subn()</code>函数</p><figure><img src=\\"https://figure-bed.chua-n.com/Python/284.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure></li></ul><h2 id=\\"_6-特定符号\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#_6-特定符号\\"><span>6. 特定符号</span></a></h2><blockquote><p>详见<a href=\\"https://docs.python.org/zh-cn/3/library/re.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">官方文档</a>。</p></blockquote><p>符号类型及含义：</p><table><thead><tr><th>符号</th><th>含义</th><th>示例</th></tr></thead><tbody><tr><td><code>.</code></td><td>匹配除了换行之外的所有字符，但只匹配一个字符</td><td><img src=\\"https://figure-bed.chua-n.com/Python/287.png\\" alt=\\"\\" loading=\\"lazy\\"></td></tr><tr><td><code>^</code></td><td>在Regex开始处使用^表式字符必须发生在查找文本开始处</td><td><img src=\\"https://figure-bed.chua-n.com/Python/288.png\\" alt=\\"\\" loading=\\"lazy\\"></td></tr><tr><td><code>$</code></td><td>在Regex末尾处加上$表示匹配字符串尾，或换行符的前一个字符</td><td><img src=\\"https://figure-bed.chua-n.com/Python/289.png\\" alt=\\"\\" loading=\\"lazy\\"></td></tr><tr><td><code>*</code></td><td>意味着匹配零次或多次，即*之前的正则式可以在文本中出现任意次</td><td>ab* 匹配 &#39;a&#39;, &#39;ab&#39;, 或&#39;a&#39;后面跟任意多个&#39;b&#39;</td></tr><tr><td><code>+</code></td><td>意味着匹配一次或多次，即+前面的正则式必须至少出现一次</td><td>ab+ 匹配 &#39;a&#39; 后面跟1个以上到任意个 &#39;b&#39;：<br><img src=\\"https://figure-bed.chua-n.com/Python/290.png\\" alt=\\"\\" loading=\\"lazy\\"></td></tr><tr><td><code>?</code></td><td>表示它前面的正则式匹配0到1次重复</td><td>ab? 会匹配 &#39;a&#39; 或 &#39;ab&#39;</td></tr><tr><td><code>.*</code></td><td>组合使用点-星符，表示除换行外的任意文本</td><td><img src=\\"https://figure-bed.chua-n.com/Python/291.png\\" alt=\\"\\" loading=\\"lazy\\"></td></tr><tr><td><code>^$</code></td><td>同时使用^$，表示整个字符串必须匹配该Regex模式</td><td><img src=\\"https://figure-bed.chua-n.com/Python/292.png\\" alt=\\"\\" loading=\\"lazy\\"></td></tr><tr><td><code>{}</code></td><td>指定其之前的正则式匹配固定（范围）次的重复</td><td>正则表达式<code>(ha){3}</code>将匹配hahaha<br>正则表达式<code>(ha){3,5}</code>将匹配hahaha, hahahaha 和 hahahahaha <br>正则表达式<code>(ha){3,}</code>将匹配3次及以上的文本</td></tr><tr><td><code>\\\\</code></td><td>转义特殊字符（允许你匹配&#39;*&#39;, &#39;?&#39; 或者此类其他）</td><td></td></tr><tr><td><code>[]</code></td><td>用[]定义自己的字符分类</td><td>如<code>[aeiouAEIOU]</code>将匹配所有元音字符 <br>如字符分类<code>[a-zA-Z0-9]</code>将匹配所有小写字母、大写字母和数字 <br><img src=\\"https://figure-bed.chua-n.com/Python/293.png\\" alt=\\"\\" loading=\\"lazy\\"></td></tr><tr><td><code>()</code></td><td>表示分组（组合），匹配括号内的任意Regex，并标识出组合的开始和结尾</td><td></td></tr><tr><td><code>\\\\d</code></td><td>0到9的任何数字</td><td></td></tr><tr><td><code>\\\\D</code></td><td>除0到9的数字以外的任何字符</td><td></td></tr><tr><td><code>\\\\w</code></td><td>任何字母、数字或下划线字符（可以认为是匹配“单词”字符）</td><td></td></tr><tr><td><code>\\\\W</code></td><td>除字母、数字和下划线以外的任何字符</td><td></td></tr><tr><td><code>\\\\s</code></td><td>空格、制表符或换行符（可以认为是匹配“空白”字符）</td><td></td></tr><tr><td><code>\\\\S</code></td><td>除空格、制表符和换行符以外的任何字符</td><td></td></tr></tbody></table>", 40)\n  ])))\n}\n// EXTERNAL MODULE: ./node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.13_webpack@5.97.1/node_modules/vue-loader/dist/exportHelper.js\nvar exportHelper = __webpack_require__(81021);\n;// ./book/.vuepress/.temp/pages/Python/标准库/regex.html.vue\n\nconst script = {}\n\n;\nconst __exports__ = /*#__PURE__*/(0,exportHelper/* default */.A)(script, [[\'render\',render]])\n\n/* harmony default export */ const regex_html = (__exports__);\n;// ./book/.vuepress/.temp/pages/Python/标准库/regex.html.js\n\nconst data = JSON.parse("{\\"path\\":\\"/Python/%E6%A0%87%E5%87%86%E5%BA%93/regex.html\\",\\"title\\":\\"regex\\",\\"lang\\":\\"zh-CN\\",\\"frontmatter\\":{\\"title\\":\\"regex\\",\\"date\\":\\"2019-09-13T00:00:00.000Z\\",\\"description\\":\\"1. 概要 正则表达式(Regular Expression, Regex) 用于文本内容的查找和替换。 Python 中所有正则表达式的函数都在标准库 re 中，故要 import re。 正则表达式的一般匹配步骤： import re 用 re.compile()函数将正则表达式的样式编译为一个Regex对象，可以用于匹配 向 Regex 对象的 ...\\",\\"head\\":[[\\"meta\\",{\\"property\\":\\"og:url\\",\\"content\\":\\"https://chua-n.com/Python/%E6%A0%87%E5%87%86%E5%BA%93/regex.html\\"}],[\\"meta\\",{\\"property\\":\\"og:site_name\\",\\"content\\":\\"荒流的笔趣屋\\"}],[\\"meta\\",{\\"property\\":\\"og:title\\",\\"content\\":\\"regex\\"}],[\\"meta\\",{\\"property\\":\\"og:description\\",\\"content\\":\\"1. 概要 正则表达式(Regular Expression, Regex) 用于文本内容的查找和替换。 Python 中所有正则表达式的函数都在标准库 re 中，故要 import re。 正则表达式的一般匹配步骤： import re 用 re.compile()函数将正则表达式的样式编译为一个Regex对象，可以用于匹配 向 Regex 对象的 ...\\"}],[\\"meta\\",{\\"property\\":\\"og:type\\",\\"content\\":\\"article\\"}],[\\"meta\\",{\\"property\\":\\"og:image\\",\\"content\\":\\"https://figure-bed.chua-n.com/Python/270.png\\"}],[\\"meta\\",{\\"property\\":\\"og:locale\\",\\"content\\":\\"zh-CN\\"}],[\\"meta\\",{\\"property\\":\\"og:updated_time\\",\\"content\\":\\"2024-04-13T02:18:27.000Z\\"}],[\\"meta\\",{\\"property\\":\\"article:published_time\\",\\"content\\":\\"2019-09-13T00:00:00.000Z\\"}],[\\"meta\\",{\\"property\\":\\"article:modified_time\\",\\"content\\":\\"2024-04-13T02:18:27.000Z\\"}],[\\"script\\",{\\"type\\":\\"application/ld+json\\"},\\"{\\\\\\"@context\\\\\\":\\\\\\"https://schema.org\\\\\\",\\\\\\"@type\\\\\\":\\\\\\"Article\\\\\\",\\\\\\"headline\\\\\\":\\\\\\"regex\\\\\\",\\\\\\"image\\\\\\":[\\\\\\"https://figure-bed.chua-n.com/Python/270.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/271.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/272-1.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/272-2.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/273-1.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/273-2.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/285.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/286.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/274.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/275.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/276.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/277.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/278.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/279-1.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/279-2.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/280.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/281.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/282.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/283.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/284.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/287.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/288.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/289.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/290.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/291.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/292.png\\\\\\",\\\\\\"https://figure-bed.chua-n.com/Python/293.png\\\\\\"],\\\\\\"datePublished\\\\\\":\\\\\\"2019-09-13T00:00:00.000Z\\\\\\",\\\\\\"dateModified\\\\\\":\\\\\\"2024-04-13T02:18:27.000Z\\\\\\",\\\\\\"author\\\\\\":[{\\\\\\"@type\\\\\\":\\\\\\"Person\\\\\\",\\\\\\"name\\\\\\":\\\\\\"荒流\\\\\\",\\\\\\"url\\\\\\":\\\\\\"https://chua-n.com\\\\\\",\\\\\\"email\\\\\\":\\\\\\"chua_n@qq.com\\\\\\"}]}\\"]]},\\"headers\\":[{\\"level\\":2,\\"title\\":\\"1. 概要\\",\\"slug\\":\\"_1-概要\\",\\"link\\":\\"#_1-概要\\",\\"children\\":[]},{\\"level\\":2,\\"title\\":\\"2. re.compile()函数\\",\\"slug\\":\\"_2-re-compile-函数\\",\\"link\\":\\"#_2-re-compile-函数\\",\\"children\\":[{\\"level\\":3,\\"title\\":\\"管道\\",\\"slug\\":\\"管道\\",\\"link\\":\\"#管道\\",\\"children\\":[]}]},{\\"level\\":2,\\"title\\":\\"3. Regex 对象\\",\\"slug\\":\\"_3-regex-对象\\",\\"link\\":\\"#_3-regex-对象\\",\\"children\\":[]},{\\"level\\":2,\\"title\\":\\"4. Match 对象\\",\\"slug\\":\\"_4-match-对象\\",\\"link\\":\\"#_4-match-对象\\",\\"children\\":[]},{\\"level\\":2,\\"title\\":\\"5. re.*函数\\",\\"slug\\":\\"_5-re-函数\\",\\"link\\":\\"#_5-re-函数\\",\\"children\\":[]},{\\"level\\":2,\\"title\\":\\"6. 特定符号\\",\\"slug\\":\\"_6-特定符号\\",\\"link\\":\\"#_6-特定符号\\",\\"children\\":[]}],\\"git\\":{\\"createdTime\\":1642689062000,\\"updatedTime\\":1712974707000,\\"contributors\\":[{\\"name\\":\\"chua-n\\",\\"email\\":\\"chua_n@yeah.net\\",\\"commits\\":5}]},\\"readingTime\\":{\\"minutes\\":6.53,\\"words\\":1958},\\"filePathRelative\\":\\"Python/标准库/regex.md\\",\\"localizedDate\\":\\"2019年9月13日\\",\\"excerpt\\":\\"<h2>1. 概要</h2>\\\\n<p><strong>正则表达式(Regular Expression, Regex)</strong> 用于文本内容的查找和替换。</p>\\\\n<p>Python 中所有正则表达式的函数都在标准库 re 中，故要 import re。</p>\\\\n<p>正则表达式的一般匹配步骤：</p>\\\\n<ol>\\\\n<li><code>import re</code></li>\\\\n<li>用 <code>re.compile()</code>函数将正则表达式的样式编译为一个<code>Regex</code>对象，可以用于匹配</li>\\\\n<li>向 <code>Regex</code> 对象的 <code>search()</code>方法传入想查找的字符串，它返回一个<code>Match</code>对象</li>\\\\n<li>调用 <code>Match</code> 对象的 <code>group()</code>方法，返回实际匹配文本的字符串。</li>\\\\n</ol>\\",\\"autoDesc\\":true}")\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2780\n')},81021:(__unused_webpack_module,exports)=>{eval("var __webpack_unused_export__;\n\n__webpack_unused_export__ = ({ value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.A = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODEwMjEuanMiLCJtYXBwaW5ncyI6IjtBQUFhO0FBQ2IsNkJBQTZDLEVBQUUsYUFBYSxDQUFDO0FBQzdEO0FBQ0E7QUFDQSxTQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm90ZWJvb2svLi9ub2RlX21vZHVsZXMvLnBucG0vdnVlLWxvYWRlckAxNy40LjJfdnVlQDMuNS4xM193ZWJwYWNrQDUuOTcuMS9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9kaXN0L2V4cG9ydEhlbHBlci5qcz8yNmM5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8gcnVudGltZSBoZWxwZXIgZm9yIHNldHRpbmcgcHJvcGVydGllcyBvbiBjb21wb25lbnRzXG4vLyBpbiBhIHRyZWUtc2hha2FibGUgd2F5XG5leHBvcnRzLmRlZmF1bHQgPSAoc2ZjLCBwcm9wcykgPT4ge1xuICAgIGNvbnN0IHRhcmdldCA9IHNmYy5fX3ZjY09wdHMgfHwgc2ZjO1xuICAgIGZvciAoY29uc3QgW2tleSwgdmFsXSBvZiBwcm9wcykge1xuICAgICAgICB0YXJnZXRba2V5XSA9IHZhbDtcbiAgICB9XG4gICAgcmV0dXJuIHRhcmdldDtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///81021\n")}}]);