"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[62805],{3355:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  comp: () => (/* reexport */ _html),\n  data: () => (/* binding */ data)\n});\n\n// EXTERNAL MODULE: ./node_modules/.pnpm/@vue+runtime-core@3.5.13/node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js\nvar runtime_core_esm_bundler = __webpack_require__(6254);\n;// ./node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.13_webpack@5.97.1/node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!./node_modules/.pnpm/@vuepress+bundler-webpack@2.0.0-rc.18/node_modules/@vuepress/bundler-webpack/dist/vuepress-ssr-loader.cjs!./node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.13_webpack@5.97.1/node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./book/.vuepress/.temp/pages/Python/numpy/其他.html.vue?vue&type=template&id=2a3c4a71\n\n\nfunction render(_ctx, _cache) {\n  return ((0,runtime_core_esm_bundler/* openBlock */.uX)(), (0,runtime_core_esm_bundler/* createElementBlock */.CE)("div", null, _cache[0] || (_cache[0] = [\n    (0,runtime_core_esm_bundler/* createStaticVNode */.Fv)("<p>没有<code>set(array2d)</code>。</p><h2 id=\\"拟合多项式函数\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#拟合多项式函数\\"><span>拟合多项式函数</span></a></h2><p>numpy提供了一些函数可根据x和y的值自动拟合你想要的多项式函数：</p><ul><li><code>np.polyfit(x, y, deg)</code>：拟合多项式函数 <ul><li><code>x</code>：自变量array_like, shape (M, )</li><li><code>y</code>：因变量array_like, shape(M, ) or (M, K)</li><li><code>deg</code>：设置的多项式函数的阶数</li><li><code>return</code>：多项式函数由高阶到低阶的系数<code>ndarray</code>, shape <code>(deg + 1, )</code> or <code>(deg + 1, K)</code></li></ul></li><li><code>np.polyval(poly_paras, x)</code>：根据自变量计算多项式函数值 <ul><li><code>poly_paras</code>：一个多项式函数的全部系数array_like，由高阶到低阶排序</li><li><code>x</code>：要计算的自变量集array_like or a num</li><li><code>Return</code>：计算得到的因变量值</li></ul></li><li><code>np.poly1d(coef_or_root, r=False, variable=None)</code>：一个一维多项式函数的类 <ul><li>根据一个一维多项式函数的系数或函数等于零的根(r=True)，得到一个多项式函数的类，此后可计算函数关于某个自变量的值或输出其函数表达式等，详见help.</li></ul></li></ul>", 4)\n  ])))\n}\n// EXTERNAL MODULE: ./node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.13_webpack@5.97.1/node_modules/vue-loader/dist/exportHelper.js\nvar exportHelper = __webpack_require__(81021);\n;// ./book/.vuepress/.temp/pages/Python/numpy/其他.html.vue\n\nconst script = {}\n\n;\nconst __exports__ = /*#__PURE__*/(0,exportHelper/* default */.A)(script, [[\'render\',render]])\n\n/* harmony default export */ const _html = (__exports__);\n;// ./book/.vuepress/.temp/pages/Python/numpy/其他.html.js\n\nconst data = JSON.parse("{\\"path\\":\\"/Python/numpy/%E5%85%B6%E4%BB%96.html\\",\\"title\\":\\"其他\\",\\"lang\\":\\"zh-CN\\",\\"frontmatter\\":{\\"title\\":\\"其他\\",\\"date\\":\\"2019-11-04T00:00:00.000Z\\",\\"description\\":\\"没有set(array2d)。 拟合多项式函数 numpy提供了一些函数可根据x和y的值自动拟合你想要的多项式函数： np.polyfit(x, y, deg)：拟合多项式函数 x：自变量array_like, shape (M, ) y：因变量array_like, shape(M, ) or (M, K) deg：设置的多项式函数的阶数 retur...\\",\\"head\\":[[\\"meta\\",{\\"property\\":\\"og:url\\",\\"content\\":\\"https://chua-n.com/Python/numpy/%E5%85%B6%E4%BB%96.html\\"}],[\\"meta\\",{\\"property\\":\\"og:site_name\\",\\"content\\":\\"荒流的笔趣屋\\"}],[\\"meta\\",{\\"property\\":\\"og:title\\",\\"content\\":\\"其他\\"}],[\\"meta\\",{\\"property\\":\\"og:description\\",\\"content\\":\\"没有set(array2d)。 拟合多项式函数 numpy提供了一些函数可根据x和y的值自动拟合你想要的多项式函数： np.polyfit(x, y, deg)：拟合多项式函数 x：自变量array_like, shape (M, ) y：因变量array_like, shape(M, ) or (M, K) deg：设置的多项式函数的阶数 retur...\\"}],[\\"meta\\",{\\"property\\":\\"og:type\\",\\"content\\":\\"article\\"}],[\\"meta\\",{\\"property\\":\\"og:locale\\",\\"content\\":\\"zh-CN\\"}],[\\"meta\\",{\\"property\\":\\"og:updated_time\\",\\"content\\":\\"2024-04-02T13:51:27.000Z\\"}],[\\"meta\\",{\\"property\\":\\"article:published_time\\",\\"content\\":\\"2019-11-04T00:00:00.000Z\\"}],[\\"meta\\",{\\"property\\":\\"article:modified_time\\",\\"content\\":\\"2024-04-02T13:51:27.000Z\\"}],[\\"script\\",{\\"type\\":\\"application/ld+json\\"},\\"{\\\\\\"@context\\\\\\":\\\\\\"https://schema.org\\\\\\",\\\\\\"@type\\\\\\":\\\\\\"Article\\\\\\",\\\\\\"headline\\\\\\":\\\\\\"其他\\\\\\",\\\\\\"image\\\\\\":[\\\\\\"\\\\\\"],\\\\\\"datePublished\\\\\\":\\\\\\"2019-11-04T00:00:00.000Z\\\\\\",\\\\\\"dateModified\\\\\\":\\\\\\"2024-04-02T13:51:27.000Z\\\\\\",\\\\\\"author\\\\\\":[{\\\\\\"@type\\\\\\":\\\\\\"Person\\\\\\",\\\\\\"name\\\\\\":\\\\\\"荒流\\\\\\",\\\\\\"url\\\\\\":\\\\\\"https://chua-n.com\\\\\\",\\\\\\"email\\\\\\":\\\\\\"chua_n@qq.com\\\\\\"}]}\\"]]},\\"headers\\":[{\\"level\\":2,\\"title\\":\\"拟合多项式函数\\",\\"slug\\":\\"拟合多项式函数\\",\\"link\\":\\"#拟合多项式函数\\",\\"children\\":[]}],\\"git\\":{\\"createdTime\\":1642734147000,\\"updatedTime\\":1712065887000,\\"contributors\\":[{\\"name\\":\\"chua-n\\",\\"email\\":\\"chua_n@yeah.net\\",\\"commits\\":3}]},\\"readingTime\\":{\\"minutes\\":0.84,\\"words\\":252},\\"filePathRelative\\":\\"Python/numpy/其他.md\\",\\"localizedDate\\":\\"2019年11月4日\\",\\"excerpt\\":\\"<p>没有<code>set(array2d)</code>。</p>\\\\n<h2>拟合多项式函数</h2>\\\\n<p>numpy提供了一些函数可根据x和y的值自动拟合你想要的多项式函数：</p>\\\\n<ul>\\\\n<li><code>np.polyfit(x, y, deg)</code>：拟合多项式函数\\\\n<ul>\\\\n<li><code>x</code>：自变量array_like, shape (M, )</li>\\\\n<li><code>y</code>：因变量array_like, shape(M, ) or (M, K)</li>\\\\n<li><code>deg</code>：设置的多项式函数的阶数</li>\\\\n<li><code>return</code>：多项式函数由高阶到低阶的系数<code>ndarray</code>, shape <code>(deg + 1, )</code> or <code>(deg + 1, K)</code></li>\\\\n</ul>\\\\n</li>\\\\n<li><code>np.polyval(poly_paras, x)</code>：根据自变量计算多项式函数值\\\\n<ul>\\\\n<li><code>poly_paras</code>：一个多项式函数的全部系数array_like，由高阶到低阶排序</li>\\\\n<li><code>x</code>：要计算的自变量集array_like or a num</li>\\\\n<li><code>Return</code>：计算得到的因变量值</li>\\\\n</ul>\\\\n</li>\\\\n<li><code>np.poly1d(coef_or_root, r=False, variable=None)</code>：一个一维多项式函数的类\\\\n<ul>\\\\n<li>根据一个一维多项式函数的系数或函数等于零的根(r=True)，得到一个多项式函数的类，此后可计算函数关于某个自变量的值或输出其函数表达式等，详见help.</li>\\\\n</ul>\\\\n</li>\\\\n</ul>\\",\\"autoDesc\\":true}")\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3355\n')},81021:(__unused_webpack_module,exports)=>{eval("var __webpack_unused_export__;\n\n__webpack_unused_export__ = ({ value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.A = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODEwMjEuanMiLCJtYXBwaW5ncyI6IjtBQUFhO0FBQ2IsNkJBQTZDLEVBQUUsYUFBYSxDQUFDO0FBQzdEO0FBQ0E7QUFDQSxTQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm90ZWJvb2svLi9ub2RlX21vZHVsZXMvLnBucG0vdnVlLWxvYWRlckAxNy40LjJfdnVlQDMuNS4xM193ZWJwYWNrQDUuOTcuMS9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9kaXN0L2V4cG9ydEhlbHBlci5qcz8yNmM5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8gcnVudGltZSBoZWxwZXIgZm9yIHNldHRpbmcgcHJvcGVydGllcyBvbiBjb21wb25lbnRzXG4vLyBpbiBhIHRyZWUtc2hha2FibGUgd2F5XG5leHBvcnRzLmRlZmF1bHQgPSAoc2ZjLCBwcm9wcykgPT4ge1xuICAgIGNvbnN0IHRhcmdldCA9IHNmYy5fX3ZjY09wdHMgfHwgc2ZjO1xuICAgIGZvciAoY29uc3QgW2tleSwgdmFsXSBvZiBwcm9wcykge1xuICAgICAgICB0YXJnZXRba2V5XSA9IHZhbDtcbiAgICB9XG4gICAgcmV0dXJuIHRhcmdldDtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///81021\n")}}]);