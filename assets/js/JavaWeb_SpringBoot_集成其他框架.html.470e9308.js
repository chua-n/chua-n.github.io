"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[62547],{39141:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  comp: () => (/* reexport */ _html),\n  data: () => (/* binding */ data)\n});\n\n// EXTERNAL MODULE: ./node_modules/.pnpm/@vue+runtime-core@3.5.13/node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js\nvar runtime_core_esm_bundler = __webpack_require__(6254);\n;// ./node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.13_webpack@5.97.1/node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!./node_modules/.pnpm/@vuepress+bundler-webpack@2.0.0-rc.18/node_modules/@vuepress/bundler-webpack/dist/vuepress-ssr-loader.cjs!./node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.13_webpack@5.97.1/node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./book/.vuepress/.temp/pages/JavaWeb/SpringBoot/集成其他框架.html.vue?vue&type=template&id=89645124\n\n\nfunction render(_ctx, _cache) {\n  return ((0,runtime_core_esm_bundler/* openBlock */.uX)(), (0,runtime_core_esm_bundler/* createElementBlock */.CE)("div", null, _cache[0] || (_cache[0] = [\n    (0,runtime_core_esm_bundler/* createStaticVNode */.Fv)("<blockquote><p>主要介绍 starter 与 <code>spring.factories</code>。</p></blockquote><h2 id=\\"基本解释\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#基本解释\\"><span>基本解释</span></a></h2><p>前述曾言，在 springboot 中，只要引入 starter，该依赖的所有常规需要的依赖都会被自动引入 spring 容器。那么这一过程究竟是怎样自动实现的呢？答案就是<code>spring.factories</code>文件。</p><p>一个 spring.factories 文件的示例（取自 mybatis-plus-boot-starter ）如下，其实就是一个 properties 的键值对配置文件：</p><div class=\\"language-properties line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"properties\\" data-title=\\"properties\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;\\"># Auto Configure</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E45649;--shiki-dark:#C678DD;\\">org.springframework.boot.env.EnvironmentPostProcessor</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF;\\">=</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#98C379;\\">\\\\</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#98C379;\\">  com.baomidou.mybatisplus.autoconfigure.SafetyEncryptProcessor</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E45649;--shiki-dark:#C678DD;\\">org.springframework.boot.autoconfigure.EnableAutoConfiguration</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF;\\">=</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#98C379;\\">\\\\</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#98C379;\\">  com.baomidou.mybatisplus.autoconfigure.IdentifierGeneratorAutoConfiguration,\\\\</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#98C379;\\">  com.baomidou.mybatisplus.autoconfigure.MybatisPlusLanguageDriverAutoConfiguration,\\\\</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#98C379;\\">  com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration</span></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0;\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><p>在 springboot 项目启动时，其会扫描项目中所有依赖的 jar 包，如果发现其中含有 <code>/META-INF/spring.factories</code> 文件，则会根据该文件中的配置加载相应的 Bean。其中最主要的键是 <code>org.springframework.boot.autoconfigure.EnableAutoConfiguration</code> ，其值是一个类的全路径名称，代表该类将被 spring 纳入 IoC 容器。因此，只需要将一个 <code>@Configuration</code> 配置类作为值赋给 <code>org.springframework.boot.autoconfigure.EnableAutoConfiguration</code>，springboot 即可加载来自 jar 包中的该配置类，达到引入 maven 坐标即可自动注入 spring 容器的效果。</p><p>因此，如果你需要达到这种引入 jar 包即引入 bean 的效果，在你项目中的<code>src/main/resources</code>下新建一个文件<code>META-INF/spring.factories</code>，然后在里面使用<code>org.springframework.boot.autoconfigure.EnableAutoConfiguration</code>指定我们自定义的 bean 的全路径即可。</p><p>源码追踪：</p><div class=\\"language-java line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"java\\" data-title=\\"java\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF;\\">@</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#E5C07B;\\">SpringBootApplication</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75;\\">\\t\\\\_ </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF;\\">@</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#E5C07B;\\">EnableAutoConfiguration</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75;\\">\\t\\t\\\\</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B;\\">_</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75;\\"> AutoConfigurationImportSelector#selectImports</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75;\\">\\t\\t\\t\\\\</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B;\\">_</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75;\\"> AutoConfigurationImportSelector#getAutoConfigurationEntry</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75;\\">\\t\\t\\t\\t\\\\</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B;\\">_</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75;\\"> AutoConfigurationImportSelector#getCandidateConfigurations</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75;\\">\\t\\t\\t\\t\\t\\\\</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B;\\">_</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75;\\"> SpringFactoriesLoader#loadFactoryNames</span></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0;\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><h2 id=\\"spi\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#spi\\"><span>SPI</span></a></h2><p>进一步讨论而言，<code>META-INF/spring.factories</code> 其实是 Spring SPI 指定加载的文件。所谓 <strong>SPI（Service Provider Interface）</strong>，是一种服务提供发现机制，SPI 的本质是将接口实现类的全限定名配置在文件中，并由服务加载器读取配置文件，从而加载实现类，这给程序在运行时提供了良好的拓展功能。</p><p>许多框架的背后都有 SPI 机制的存在：Java 中有<code>ServiceLoader</code>，Spring 中有<code>SpringFactoriesLoader</code>，Dubbo 中有<code>ExtensionLoader</code>。这些 SPI 机制对扩展程序功能至关重要，可以说理解 SPI 是每一个 javaer 必备的技能。</p><p>在 Spring 中，<code>SpringFactoriesLoader</code>负责加载<code>META-INF/spring.factories</code>属性配置文件并解析。<code>SpringFactoriesLoader</code>实际上是 Spring Framework 在 3.2 版本引入的 SPI 机制，在 spring 框架内部一直默默无闻，直至 Spring Boot 和 Spring Cloud 的出现，<code>SpringFactoriesLoader</code>开始大放异彩。</p><p>不过，自 Spring Boot 2.7 开始，spring 不再推荐使用<code>/META-INF/spring.factories</code>文件，并且在 Spring Boot 3 将移除对<code>/META-INF/spring.factories</code>的支持。新的写法是创建一个新的文件：<code>/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports</code>，文件内容直接放配置类即可（注意路径中间存在一个 <code>spring/</code> 目录），比如这样：</p><div class=\\"language-text line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"text\\" data-title=\\"text\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>com.baomidou.mybatisplus.autoconfigure.IdentifierGeneratorAutoConfiguration</span></span>\\n<span class=\\"line\\"><span>com.baomidou.mybatisplus.autoconfigure.MybatisPlusLanguageDriverAutoConfiguration</span></span>\\n<span class=\\"line\\"><span>com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration</span></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0;\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>", 15)\n  ])))\n}\n// EXTERNAL MODULE: ./node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.13_webpack@5.97.1/node_modules/vue-loader/dist/exportHelper.js\nvar exportHelper = __webpack_require__(81021);\n;// ./book/.vuepress/.temp/pages/JavaWeb/SpringBoot/集成其他框架.html.vue\n\nconst script = {}\n\n;\nconst __exports__ = /*#__PURE__*/(0,exportHelper/* default */.A)(script, [[\'render\',render]])\n\n/* harmony default export */ const _html = (__exports__);\n;// ./book/.vuepress/.temp/pages/JavaWeb/SpringBoot/集成其他框架.html.js\n\nconst data = JSON.parse("{\\"path\\":\\"/JavaWeb/SpringBoot/%E9%9B%86%E6%88%90%E5%85%B6%E4%BB%96%E6%A1%86%E6%9E%B6.html\\",\\"title\\":\\"集成其他框架\\",\\"lang\\":\\"zh-CN\\",\\"frontmatter\\":{\\"title\\":\\"集成其他框架\\",\\"description\\":\\"主要介绍 starter 与 spring.factories。 基本解释 前述曾言，在 springboot 中，只要引入 starter，该依赖的所有常规需要的依赖都会被自动引入 spring 容器。那么这一过程究竟是怎样自动实现的呢？答案就是spring.factories文件。 一个 spring.factories 文件的示例（取自 myba...\\",\\"head\\":[[\\"meta\\",{\\"property\\":\\"og:url\\",\\"content\\":\\"https://chua-n.com/JavaWeb/SpringBoot/%E9%9B%86%E6%88%90%E5%85%B6%E4%BB%96%E6%A1%86%E6%9E%B6.html\\"}],[\\"meta\\",{\\"property\\":\\"og:site_name\\",\\"content\\":\\"荒流的笔趣屋\\"}],[\\"meta\\",{\\"property\\":\\"og:title\\",\\"content\\":\\"集成其他框架\\"}],[\\"meta\\",{\\"property\\":\\"og:description\\",\\"content\\":\\"主要介绍 starter 与 spring.factories。 基本解释 前述曾言，在 springboot 中，只要引入 starter，该依赖的所有常规需要的依赖都会被自动引入 spring 容器。那么这一过程究竟是怎样自动实现的呢？答案就是spring.factories文件。 一个 spring.factories 文件的示例（取自 myba...\\"}],[\\"meta\\",{\\"property\\":\\"og:type\\",\\"content\\":\\"article\\"}],[\\"meta\\",{\\"property\\":\\"og:locale\\",\\"content\\":\\"zh-CN\\"}],[\\"meta\\",{\\"property\\":\\"og:updated_time\\",\\"content\\":\\"2024-05-04T09:51:31.000Z\\"}],[\\"meta\\",{\\"property\\":\\"article:modified_time\\",\\"content\\":\\"2024-05-04T09:51:31.000Z\\"}],[\\"script\\",{\\"type\\":\\"application/ld+json\\"},\\"{\\\\\\"@context\\\\\\":\\\\\\"https://schema.org\\\\\\",\\\\\\"@type\\\\\\":\\\\\\"Article\\\\\\",\\\\\\"headline\\\\\\":\\\\\\"集成其他框架\\\\\\",\\\\\\"image\\\\\\":[\\\\\\"\\\\\\"],\\\\\\"dateModified\\\\\\":\\\\\\"2024-05-04T09:51:31.000Z\\\\\\",\\\\\\"author\\\\\\":[{\\\\\\"@type\\\\\\":\\\\\\"Person\\\\\\",\\\\\\"name\\\\\\":\\\\\\"荒流\\\\\\",\\\\\\"url\\\\\\":\\\\\\"https://chua-n.com\\\\\\",\\\\\\"email\\\\\\":\\\\\\"chua_n@qq.com\\\\\\"}]}\\"]]},\\"headers\\":[{\\"level\\":2,\\"title\\":\\"基本解释\\",\\"slug\\":\\"基本解释\\",\\"link\\":\\"#基本解释\\",\\"children\\":[]},{\\"level\\":2,\\"title\\":\\"SPI\\",\\"slug\\":\\"spi\\",\\"link\\":\\"#spi\\",\\"children\\":[]}],\\"git\\":{\\"createdTime\\":1626086046000,\\"updatedTime\\":1714816291000,\\"contributors\\":[{\\"name\\":\\"chua-n\\",\\"email\\":\\"chua_n@yeah.net\\",\\"commits\\":3}]},\\"readingTime\\":{\\"minutes\\":2.13,\\"words\\":638},\\"filePathRelative\\":\\"JavaWeb/SpringBoot/集成其他框架.md\\",\\"localizedDate\\":\\"2021年7月12日\\",\\"excerpt\\":\\"<blockquote>\\\\n<p>主要介绍 starter 与 <code>spring.factories</code>。</p>\\\\n</blockquote>\\\\n<h2>基本解释</h2>\\\\n<p>前述曾言，在 springboot 中，只要引入 starter，该依赖的所有常规需要的依赖都会被自动引入 spring 容器。那么这一过程究竟是怎样自动实现的呢？答案就是<code>spring.factories</code>文件。</p>\\\\n<p>一个 spring.factories 文件的示例（取自 mybatis-plus-boot-starter ）如下，其实就是一个 properties 的键值对配置文件：</p>\\",\\"autoDesc\\":true}")\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///39141\n')},81021:(__unused_webpack_module,exports)=>{eval("var __webpack_unused_export__;\n\n__webpack_unused_export__ = ({ value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.A = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODEwMjEuanMiLCJtYXBwaW5ncyI6IjtBQUFhO0FBQ2IsNkJBQTZDLEVBQUUsYUFBYSxDQUFDO0FBQzdEO0FBQ0E7QUFDQSxTQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm90ZWJvb2svLi9ub2RlX21vZHVsZXMvLnBucG0vdnVlLWxvYWRlckAxNy40LjJfdnVlQDMuNS4xM193ZWJwYWNrQDUuOTcuMS9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9kaXN0L2V4cG9ydEhlbHBlci5qcz8yNmM5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8gcnVudGltZSBoZWxwZXIgZm9yIHNldHRpbmcgcHJvcGVydGllcyBvbiBjb21wb25lbnRzXG4vLyBpbiBhIHRyZWUtc2hha2FibGUgd2F5XG5leHBvcnRzLmRlZmF1bHQgPSAoc2ZjLCBwcm9wcykgPT4ge1xuICAgIGNvbnN0IHRhcmdldCA9IHNmYy5fX3ZjY09wdHMgfHwgc2ZjO1xuICAgIGZvciAoY29uc3QgW2tleSwgdmFsXSBvZiBwcm9wcykge1xuICAgICAgICB0YXJnZXRba2V5XSA9IHZhbDtcbiAgICB9XG4gICAgcmV0dXJuIHRhcmdldDtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///81021\n")}}]);