"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[96573],{96468:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  comp: () => (/* reexport */ index_html),\n  data: () => (/* binding */ data)\n});\n\n// EXTERNAL MODULE: ./node_modules/.pnpm/@vue+runtime-core@3.5.13/node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js\nvar runtime_core_esm_bundler = __webpack_require__(6254);\n;// ./node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.13_webpack@5.97.1/node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!./node_modules/.pnpm/@vuepress+bundler-webpack@2.0.0-rc.18/node_modules/@vuepress/bundler-webpack/dist/vuepress-ssr-loader.cjs!./node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.13_webpack@5.97.1/node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./book/.vuepress/.temp/pages/Java/设计模式/index.html.vue?vue&type=template&id=52212d4a\n\n\nfunction render(_ctx, _cache) {\n  return ((0,runtime_core_esm_bundler/* openBlock */.uX)(), (0,runtime_core_esm_bundler/* createElementBlock */.CE)("div", null, _cache[0] || (_cache[0] = [\n    (0,runtime_core_esm_bundler/* createStaticVNode */.Fv)("<blockquote><p>本章介绍各类设计模式。</p></blockquote><p>总体来说设计模式分为三大类，共计23种：</p><ul><li>创建型模式（Creational Patterns）：创建型模式关注点是如何创建对象，其核心思想是要把对象的创建和使用相分离，这样使得两者能相对独立地变换。创建型模式共5种： <ul><li>工厂模式（Factory Pattern）</li><li>抽象工厂模式（Abstract Factory Pattern）</li><li>单例模式（Singleton Pattern）</li><li>建造者模式（Builder Pattern）</li><li>原型模式（Prototype Pattern）</li></ul></li><li>结构型模式（Structural Patterns）：结构型模式主要涉及如何组合各种对象，以便获得更好、更灵活的结构。虽然面向对象的继承机制提供了最基本的子类扩展父类的功能，但结构型模式不仅仅简单地使用继承，而更多地通过组合与运行期的动态组合等来实现更灵活的功能。结构型模式共7种： <ul><li>适配器模式（Adapter Pattern）</li><li>装饰器模式（Decorator Pattern）</li><li>代理模式（Proxy Pattern）</li><li>外观模式（Facade Pattern）</li><li>桥接模式（Bridge Pattern）</li><li>组合模式（Composite Pattern）</li><li>享元模式（Flyweight Pattern）</li></ul></li><li>行为型模式（Behavioral Patterns）：行为型模式主要涉及对在不同的对象之间划分责任算法，其关注对象的行为及不同对象之间的交互。行为型模式共11种： <ul><li>策略模式（Strategy Pattern）</li><li>模板模式（Template Pattern）</li><li>观察者模式（Observer Pattern）</li><li>迭代器模式（Iterator Pattern）</li><li>责任链模式（Chain of Responsibility Pattern）</li><li>命令模式（Command Pattern）</li><li>备忘录模式（Memento Pattern）</li><li>状态模式（State Pattern）</li><li>访问者模式（Visitor Pattern）</li><li>中介者模式（Mediator Pattern）</li><li>解释器模式（Interpreter Pattern）</li></ul></li></ul><p>设计模式的六大原则：</p><ol><li><p>开闭原则（Open Close Principle）</p><blockquote><p><strong>对扩展开放，对修改关闭</strong>。</p><p>这里的意思是在增加新功能的时候，能不改代码就尽量不要改，如果只增加代码就完成了新功能，那是最好的。</p></blockquote></li><li><p>里氏代换原则（Liskov Substitution Principle）</p><blockquote><p><strong>任何基类可以出现的地方，子类一定可以出现。</strong></p><p>里氏代换原则是面向对象设计的基本原则之一，这也是继承复用的基石，只有当派生类可以替换掉基类，且软件的功能不受到影响时，基类才能真正被复用，同时派生类也能够在基类的基础上增加新的行为。</p></blockquote></li><li><p>依赖倒转原则（Dependence Inversion Principle）</p><blockquote><p>针对接口编程，依赖于抽象而不依赖于具体。</p></blockquote></li><li><p>接口隔离原则（Interface Segregation Principle）</p><blockquote><p><strong>使用多个隔离的接口，比使用单个接口要好。</strong></p><p>还是一个降低类之间的耦合度的意思。</p></blockquote></li><li><p>迪米特法则（Demeter Principle）</p><blockquote><p><strong>又称最少知道原则：一个对象应当对其他对象有尽可能少地了解，简称类间解耦</strong></p></blockquote></li><li><p>合成复用原则（Composite Reuse Principle）</p><blockquote><p><strong>尽量使用对象组合、而不是使用继承来达到软件复用的目的。</strong></p></blockquote></li></ol>", 5)\n  ])))\n}\n// EXTERNAL MODULE: ./node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.13_webpack@5.97.1/node_modules/vue-loader/dist/exportHelper.js\nvar exportHelper = __webpack_require__(81021);\n;// ./book/.vuepress/.temp/pages/Java/设计模式/index.html.vue\n\nconst script = {}\n\n;\nconst __exports__ = /*#__PURE__*/(0,exportHelper/* default */.A)(script, [[\'render\',render]])\n\n/* harmony default export */ const index_html = (__exports__);\n;// ./book/.vuepress/.temp/pages/Java/设计模式/index.html.js\n\nconst data = JSON.parse("{\\"path\\":\\"/Java/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/\\",\\"title\\":\\"设计模式\\",\\"lang\\":\\"zh-CN\\",\\"frontmatter\\":{\\"title\\":\\"设计模式\\",\\"description\\":\\"本章介绍各类设计模式。 总体来说设计模式分为三大类，共计23种： 创建型模式（Creational Patterns）：创建型模式关注点是如何创建对象，其核心思想是要把对象的创建和使用相分离，这样使得两者能相对独立地变换。创建型模式共5种： 工厂模式（Factory Pattern） 抽象工厂模式（Abstract Factory Pattern） 单...\\",\\"head\\":[[\\"meta\\",{\\"property\\":\\"og:url\\",\\"content\\":\\"https://chua-n.com/Java/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/\\"}],[\\"meta\\",{\\"property\\":\\"og:site_name\\",\\"content\\":\\"荒流的笔趣屋\\"}],[\\"meta\\",{\\"property\\":\\"og:title\\",\\"content\\":\\"设计模式\\"}],[\\"meta\\",{\\"property\\":\\"og:description\\",\\"content\\":\\"本章介绍各类设计模式。 总体来说设计模式分为三大类，共计23种： 创建型模式（Creational Patterns）：创建型模式关注点是如何创建对象，其核心思想是要把对象的创建和使用相分离，这样使得两者能相对独立地变换。创建型模式共5种： 工厂模式（Factory Pattern） 抽象工厂模式（Abstract Factory Pattern） 单...\\"}],[\\"meta\\",{\\"property\\":\\"og:type\\",\\"content\\":\\"article\\"}],[\\"meta\\",{\\"property\\":\\"og:locale\\",\\"content\\":\\"zh-CN\\"}],[\\"meta\\",{\\"property\\":\\"og:updated_time\\",\\"content\\":\\"2024-02-20T02:59:55.000Z\\"}],[\\"meta\\",{\\"property\\":\\"article:modified_time\\",\\"content\\":\\"2024-02-20T02:59:55.000Z\\"}],[\\"script\\",{\\"type\\":\\"application/ld+json\\"},\\"{\\\\\\"@context\\\\\\":\\\\\\"https://schema.org\\\\\\",\\\\\\"@type\\\\\\":\\\\\\"Article\\\\\\",\\\\\\"headline\\\\\\":\\\\\\"设计模式\\\\\\",\\\\\\"image\\\\\\":[\\\\\\"\\\\\\"],\\\\\\"dateModified\\\\\\":\\\\\\"2024-02-20T02:59:55.000Z\\\\\\",\\\\\\"author\\\\\\":[{\\\\\\"@type\\\\\\":\\\\\\"Person\\\\\\",\\\\\\"name\\\\\\":\\\\\\"荒流\\\\\\",\\\\\\"url\\\\\\":\\\\\\"https://chua-n.com\\\\\\",\\\\\\"email\\\\\\":\\\\\\"chua_n@qq.com\\\\\\"}]}\\"]]},\\"headers\\":[],\\"git\\":{\\"createdTime\\":1626354214000,\\"updatedTime\\":1708397995000,\\"contributors\\":[{\\"name\\":\\"chua-n\\",\\"email\\":\\"chua_n@yeah.net\\",\\"commits\\":2}]},\\"readingTime\\":{\\"minutes\\":2.51,\\"words\\":753},\\"filePathRelative\\":\\"Java/设计模式/README.md\\",\\"localizedDate\\":\\"2021年7月15日\\",\\"excerpt\\":\\"<blockquote>\\\\n<p>本章介绍各类设计模式。</p>\\\\n</blockquote>\\\\n<p>总体来说设计模式分为三大类，共计23种：</p>\\\\n<ul>\\\\n<li>创建型模式（Creational Patterns）：创建型模式关注点是如何创建对象，其核心思想是要把对象的创建和使用相分离，这样使得两者能相对独立地变换。创建型模式共5种：\\\\n<ul>\\\\n<li>工厂模式（Factory Pattern）</li>\\\\n<li>抽象工厂模式（Abstract Factory Pattern）</li>\\\\n<li>单例模式（Singleton Pattern）</li>\\\\n<li>建造者模式（Builder Pattern）</li>\\\\n<li>原型模式（Prototype Pattern）</li>\\\\n</ul>\\\\n</li>\\\\n<li>结构型模式（Structural Patterns）：结构型模式主要涉及如何组合各种对象，以便获得更好、更灵活的结构。虽然面向对象的继承机制提供了最基本的子类扩展父类的功能，但结构型模式不仅仅简单地使用继承，而更多地通过组合与运行期的动态组合等来实现更灵活的功能。结构型模式共7种：\\\\n<ul>\\\\n<li>适配器模式（Adapter Pattern）</li>\\\\n<li>装饰器模式（Decorator Pattern）</li>\\\\n<li>代理模式（Proxy Pattern）</li>\\\\n<li>外观模式（Facade Pattern）</li>\\\\n<li>桥接模式（Bridge Pattern）</li>\\\\n<li>组合模式（Composite Pattern）</li>\\\\n<li>享元模式（Flyweight Pattern）</li>\\\\n</ul>\\\\n</li>\\\\n<li>行为型模式（Behavioral Patterns）：行为型模式主要涉及对在不同的对象之间划分责任算法，其关注对象的行为及不同对象之间的交互。行为型模式共11种：\\\\n<ul>\\\\n<li>策略模式（Strategy Pattern）</li>\\\\n<li>模板模式（Template Pattern）</li>\\\\n<li>观察者模式（Observer Pattern）</li>\\\\n<li>迭代器模式（Iterator Pattern）</li>\\\\n<li>责任链模式（Chain of Responsibility Pattern）</li>\\\\n<li>命令模式（Command Pattern）</li>\\\\n<li>备忘录模式（Memento Pattern）</li>\\\\n<li>状态模式（State Pattern）</li>\\\\n<li>访问者模式（Visitor Pattern）</li>\\\\n<li>中介者模式（Mediator Pattern）</li>\\\\n<li>解释器模式（Interpreter Pattern）</li>\\\\n</ul>\\\\n</li>\\\\n</ul>\\",\\"autoDesc\\":true}")\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///96468\n')},81021:(__unused_webpack_module,exports)=>{eval("var __webpack_unused_export__;\n\n__webpack_unused_export__ = ({ value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.A = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODEwMjEuanMiLCJtYXBwaW5ncyI6IjtBQUFhO0FBQ2IsNkJBQTZDLEVBQUUsYUFBYSxDQUFDO0FBQzdEO0FBQ0E7QUFDQSxTQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm90ZWJvb2svLi9ub2RlX21vZHVsZXMvLnBucG0vdnVlLWxvYWRlckAxNy40LjJfdnVlQDMuNS4xM193ZWJwYWNrQDUuOTcuMS9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9kaXN0L2V4cG9ydEhlbHBlci5qcz8yNmM5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8gcnVudGltZSBoZWxwZXIgZm9yIHNldHRpbmcgcHJvcGVydGllcyBvbiBjb21wb25lbnRzXG4vLyBpbiBhIHRyZWUtc2hha2FibGUgd2F5XG5leHBvcnRzLmRlZmF1bHQgPSAoc2ZjLCBwcm9wcykgPT4ge1xuICAgIGNvbnN0IHRhcmdldCA9IHNmYy5fX3ZjY09wdHMgfHwgc2ZjO1xuICAgIGZvciAoY29uc3QgW2tleSwgdmFsXSBvZiBwcm9wcykge1xuICAgICAgICB0YXJnZXRba2V5XSA9IHZhbDtcbiAgICB9XG4gICAgcmV0dXJuIHRhcmdldDtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///81021\n")}}]);