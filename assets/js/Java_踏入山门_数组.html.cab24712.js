"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[74925],{59273:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  comp: () => (/* reexport */ _html),\n  data: () => (/* binding */ data)\n});\n\n// EXTERNAL MODULE: ./node_modules/.pnpm/@vue+runtime-core@3.5.13/node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js\nvar runtime_core_esm_bundler = __webpack_require__(6254);\n;// ./node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.13_webpack@5.97.1/node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!./node_modules/.pnpm/@vuepress+bundler-webpack@2.0.0-rc.18/node_modules/@vuepress/bundler-webpack/dist/vuepress-ssr-loader.cjs!./node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.13_webpack@5.97.1/node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./book/.vuepress/.temp/pages/Java/踏入山门/数组.html.vue?vue&type=template&id=7569973c\n\n\nfunction render(_ctx, _cache) {\n  return ((0,runtime_core_esm_bundler/* openBlock */.uX)(), (0,runtime_core_esm_bundler/* createElementBlock */.CE)("div", null, _cache[0] || (_cache[0] = [\n    (0,runtime_core_esm_bundler/* createStaticVNode */.Fv)("<h2 id=\\"_1-java数组简介\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#_1-java数组简介\\"><span>1. Java数组简介</span></a></h2><p>一个数组里只能存储一种数据类型的数据，而不能存储多种数据类型的数据。</p><ul><li>因为 Java 语言类与类之间可以支持继承关系，这样可能产生一个数组里可以存放多种数据类型的假象。例如有一个水果数组，要求每个数组元素都是水果，而实际上数组元素可以是苹果、香蕉等，但这个数组的数组元素的类型还是唯一的，只能是水果类型。</li><li>一旦数组的初始化完成，数组在内存中所占的空间将被固定下来，因此数组的长度将不可改变。即使把某个数组元素的数据清空，但它所占的空间依然被保留，依然属于该数组，数组的长度依旧不变。</li><li>值得指出的是，<strong>数组也是一种数据类型</strong>，它本身是一种<em>引用类型</em>。例如 <code>int</code> 是一个基本类型，但 <code>int[]</code> 就是一种引用类型了。</li></ul><p>Java 语言支持两种语法格式来声明/定义数组：</p><ul><li><code>type[] arrayName;</code>：推荐！具有更好的语言及可读性。</li><li><code>type arrayName[];</code>：应该拒绝使用！</li></ul><p>在Java里，<strong>数组是一个对象</strong>，每个数组都有一个由<code>public final</code>修饰的成员变量<code>length</code>，即数组含有元素的个数（<code>length</code>可以为正或零）：</p><div class=\\"language-java line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"java\\" data-title=\\"java\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;\\">// 使用循环输出prices数组的每个数组元素的值</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD;\\">for</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75;\\"> (</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD;\\">int</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75;\\"> i </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2;\\">=</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66;\\"> 0</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF;\\">;</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75;\\"> i </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2;\\">&lt;</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E5C07B;\\"> prices</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF;\\">.</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E5C07B;\\">length</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF;\\">;</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75;\\"> i</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF;\\">++</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75;\\">){</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E45649;--shiki-dark:#E5C07B;\\">    System</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF;\\">.</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E5C07B;\\">out</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF;\\">.</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF;\\">println</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF;\\">(prices[i]);</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75;\\">}</span></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0;\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><p>对于数组，若其索引值小于 0，或者大于等于数组的长度，程序在编译时不会出现任何错误信息，但会出现运行时异常：<code>java.lang.ArrayIndexOutOfBoundsException: N（数组索引越界异常）</code>，异常信息后的 N 就是程序员试图访问的数组索引。</p><h2 id=\\"_2-数组初始化\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#_2-数组初始化\\"><span>2. 数组初始化</span></a></h2><p>定义并初始化一个数组后，在内存中分配了两个空间，一个用于存放数组的引用变量，另一个用于存放数组本身。</p><h3 id=\\"_2-1-静态初始化\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#_2-1-静态初始化\\"><span>2.1 静态初始化</span></a></h3><p>初始化时由程序员显示指定每个数组元素的初始值，由系统决定数组长度；</p><p>语法格式：</p><ul><li><p><code>arrayName = new type[] {ele1, ele2, ele3, …};</code>：语法1</p></li><li><p><code>type[] arrayName = {ele1, ele2, ele3, …};</code>：语法2：可在定义时同时初始化</p></li></ul><blockquote><p>在实际开发中其实更习惯于在定义时即将初始化同时完成，即使用第 2 种写法：<code>int[] a = {1,2,3,4};</code></p></blockquote><h3 id=\\"_2-2-动态初始化\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#_2-2-动态初始化\\"><span>2.2 动态初始化</span></a></h3><p>初始化时程序员只指定数组长度，由系统为数组元素分配初始值。</p><p>语法格式：</p><ul><li><p><code>arrayName = new type[length];</code>：语法1</p></li><li><p><code>type[] arrayName = new type[length];</code>：语法2，在定义时同时初始化</p></li></ul><blockquote><p>在实际开发中其实更习惯于在定义时即将初始化同时完成，即使用第 2 种写法：<code>int[] prices = new int[5];</code></p></blockquote><h3 id=\\"_2-3-初始化默认值\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#_2-3-初始化默认值\\"><span>2.3 初始化默认值</span></a></h3><p>系统为数组指定初始值时，按如下规则分配初始值：</p><table><thead><tr><th>数组元素类型</th><th>值</th></tr></thead><tbody><tr><td>整数类型（<code>byte,short,int,long</code>）</td><td><code>0</code></td></tr><tr><td>浮点类型（<code>float,double</code>）</td><td><code>0.0</code></td></tr><tr><td>字符类型（<code>char</code>）</td><td><code>&#39;\\\\u0000&#39;</code></td></tr><tr><td>布尔类型（<code>boolean</code>）</td><td><code>false</code></td></tr><tr><td>引用类型（<code>类、接口、数组</code>）</td><td><code>null</code></td></tr></tbody></table><h2 id=\\"_3-java-数组的物理逻辑\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#_3-java-数组的物理逻辑\\"><span>3. Java 数组的物理逻辑</span></a></h2><p>数组是一种引用类型的变量，因此使用它定义一个变量时，仅仅表示定义了一个引用变量（也就是一个指针），这个引用变量还未指向任何有效的内存，因此：</p><ul><li>定义数组时不能指定数组的长度，且这个数组只有被进行初始化后才可能使用。</li><li>Java 中不能只分配内存空间而不赋初始值。</li><li>一旦为数组的每个数组元素分配了内存空间，即使其内容为空，这个空也是一个值。</li></ul><p>数组引用变量只是一个引用，这个引用变量可以指向任何有效的内存，只有当该引用指向有效内存后，才可通过该数组变量来访问数组元素。</p><p>实际的数组对象被存储在<strong>堆（heap）内存</strong>中；如果引用该数组对象的数组引用变量是一个局部变量，那么它被存储在<strong>栈（stack）内存</strong>中。</p><img src=\\"https://figure-bed.chua-n.com/Java/16.png\\" alt=\\"16\\" style=\\"zoom:50%;\\"><ul><li>当一个方法执行时，每个方法都会建立自己的<strong>内存栈</strong>，在这个方法内定义的变量将会逐个放入这块栈内存里，随着方法的执行结束，这个方法的内存栈也自然销毁。因此，所有在方法中定义的局部变量都是放在栈内存中的。</li><li>在程序中创建一个对象时，这个对象将被保存到运行时数据区中，以便反复利用（因为<strong>对象的创建成本通常较大</strong>），这个运行时数据区就是<strong>堆内存</strong>。堆内存中的对象不会随方法的结束而销毁，即使方法结束后，这个对象还可能被另一个引用变量所引用，所以这个对象依然不会被销毁。只有当一个对象没有任何引用变量引用它时，系统的垃圾回收器才会在合适的时候回收它。</li></ul><p>由上可理解这种情况了：</p><img src=\\"https://figure-bed.chua-n.com/Java/17.png\\" alt=\\"17\\" style=\\"zoom:50%;\\"><img src=\\"https://figure-bed.chua-n.com/Java/18.png\\" alt=\\"18\\" style=\\"zoom:50%;\\"><h2 id=\\"_4-多维数组\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#_4-多维数组\\"><span>4. 多维数组</span></a></h2><p>定义二维数组：<code>type[][] arrName;</code></p><p>初始化二维数组：</p><table><thead><tr><th>语法</th><th>说明</th></tr></thead><tbody><tr><td><code>arrName = new type[length][];</code></td><td>// 把这个数组当成一维数组来初始化</td></tr><tr><td><code>int[][] b = new int[3][4] </code></td><td>// 同时初始化二维数组的两个维数</td></tr><tr><td><code>String[][] str1 = new String[][]{new String[3], new String[]{&quot;hello&quot;}};</code></td><td>// 静态初始化</td></tr><tr><td><code>String[][] str2 = {new String[3], new String[]{&quot;hello&quot;}}; </code></td><td>// 与上等价，一种简化写法</td></tr></tbody></table><blockquote><ol><li>上面代码将定义一个 <code>b</code> 数组变量，这个数组变量指向一个长度为 3 的数组，这个数组的每个数组元素又是一个数组类型，它们各指向对应的长度为 4 的 <code>int[]</code> 数组，每个数组元素的值为 0：</li></ol><img src=\\"https://figure-bed.chua-n.com/Java/19.png\\" alt=\\"19\\" style=\\"zoom:67%;\\"><ol start=\\"2\\"><li>上面代码中定义的 <code>str1</code> 的内存存储示意图如下：</li></ol><img src=\\"https://figure-bed.chua-n.com/Java/20.png\\" alt=\\"20\\" style=\\"zoom:67%;\\"></blockquote><p>由上而言，Java实际上没有多维数组，只有一维数组，多维数组在Java中本质上是“数组的数组”。</p><h2 id=\\"_5-arrays-类\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#_5-arrays-类\\"><span>5. Arrays 类</span></a></h2><p><code>Arrays</code> 类处于 <code>java.util</code> 包下，其中包含的一些 <code>static</code> 修饰的方法可以直接操作数组，如下：</p><table><thead><tr><th><code>static</code> 方法</th><th>说明</th></tr></thead><tbody><tr><td><code>int binarySearch(type[] a, type key)</code></td><td>二分查找</td></tr><tr><td><code>int binarySearch(type[] a, int fromIndex, int toIndex, type key)</code></td><td>二分查找</td></tr><tr><td><code>Type[] copyOf(type[] original, int length)</code></td><td>将一个数组的所有值拷贝到一个新的数组中去</td></tr><tr><td><code>Type[] copyOfRange(type[] original, int from, int to)</code></td><td></td></tr><tr><td><code>boolean equals(type[] a, type[] a2)</code></td><td>如果两个数组大小相同，并且下标相同的元素都对应相等，返回true</td></tr><tr><td><code>void fill(type[] a, type val)</code></td><td>将数组的所有数据元素设置为val</td></tr><tr><td><code>void fill(type[] a, int fromIndex, int toIndex, type val)</code></td><td></td></tr><tr><td><code>void sort(type[] a)</code></td><td>对数组进行排序，该方法使用快速排序算法</td></tr><tr><td><code>void sort(type[] a, int fromIndex, int toIndex)</code></td><td></td></tr><tr><td><code>String toString(type[] a)</code></td><td></td></tr></tbody></table><p>Java 8增强了<code>Arrays</code>类的功能，为<code>Arrays</code>类增加了一些工具方法，这些工具方法可以充分利用多CPU并行的能力来提高设值、排序的性能：</p><table><thead><tr><th>Java8 新增工具方法</th><th>说明</th></tr></thead><tbody><tr><td><code>void parallelPrefix(xxx[] array, XxxBinaryOperator op)</code></td><td>使用op参数指定的计算公式计算得到的结果作为新的元素</td></tr><tr><td><code>void parallelPrefix(xxx[] array, int fromIndex, int toIndex, XxxBinaryOperator op)</code></td><td>同上，但只重新计算 fronIndex 到 toIndex 索引的元素</td></tr><tr><td><code>void setAll(xxx[] array, IntToXxxFunction generator)</code></td><td>使用指定的生成器为所有数组元素设置值</td></tr><tr><td><code>void parallelSetAll(xxx[] array, IntToXxxFunction generator)</code></td><td>同上，但增加了并行能力</td></tr><tr><td><code>void parallelSort(xxx[] a)</code></td><td></td></tr><tr><td><code>void parallelSort(xxx[] a, int fromIndex, int toIndex)</code></td><td></td></tr><tr><td><code>Spliterator.OfXxx spliterator(xxx[] array)</code></td><td>将该数组的所有元素转换成对应的 <code>Spliterator</code> 对象</td></tr><tr><td><code>Spliterator.OfXxx spliterator(xxx[] array, int startInclusive, int endExclusive)</code></td><td></td></tr><tr><td><code>XxxStream stream(xxx[] array)</code></td><td>将数组转换为 <code>Stream</code></td></tr><tr><td><code>XxxStream stream(xxx[] array, int startInclusive, int endExclusive)</code></td><td></td></tr></tbody></table>", 44)\n  ])))\n}\n// EXTERNAL MODULE: ./node_modules/.pnpm/vue-loader@17.4.2_vue@3.5.13_webpack@5.97.1/node_modules/vue-loader/dist/exportHelper.js\nvar exportHelper = __webpack_require__(81021);\n;// ./book/.vuepress/.temp/pages/Java/踏入山门/数组.html.vue\n\nconst script = {}\n\n;\nconst __exports__ = /*#__PURE__*/(0,exportHelper/* default */.A)(script, [[\'render\',render]])\n\n/* harmony default export */ const _html = (__exports__);\n;// ./book/.vuepress/.temp/pages/Java/踏入山门/数组.html.js\n\nconst data = JSON.parse("{\\"path\\":\\"/Java/%E8%B8%8F%E5%85%A5%E5%B1%B1%E9%97%A8/%E6%95%B0%E7%BB%84.html\\",\\"title\\":\\"数组\\",\\"lang\\":\\"zh-CN\\",\\"frontmatter\\":{\\"title\\":\\"数组\\",\\"date\\":\\"2020-08-04T00:00:00.000Z\\",\\"description\\":\\"1. Java数组简介 一个数组里只能存储一种数据类型的数据，而不能存储多种数据类型的数据。 因为 Java 语言类与类之间可以支持继承关系，这样可能产生一个数组里可以存放多种数据类型的假象。例如有一个水果数组，要求每个数组元素都是水果，而实际上数组元素可以是苹果、香蕉等，但这个数组的数组元素的类型还是唯一的，只能是水果类型。 一旦数组的初始化完成，数...\\",\\"head\\":[[\\"meta\\",{\\"property\\":\\"og:url\\",\\"content\\":\\"https://chua-n.com/Java/%E8%B8%8F%E5%85%A5%E5%B1%B1%E9%97%A8/%E6%95%B0%E7%BB%84.html\\"}],[\\"meta\\",{\\"property\\":\\"og:site_name\\",\\"content\\":\\"荒流的笔趣屋\\"}],[\\"meta\\",{\\"property\\":\\"og:title\\",\\"content\\":\\"数组\\"}],[\\"meta\\",{\\"property\\":\\"og:description\\",\\"content\\":\\"1. Java数组简介 一个数组里只能存储一种数据类型的数据，而不能存储多种数据类型的数据。 因为 Java 语言类与类之间可以支持继承关系，这样可能产生一个数组里可以存放多种数据类型的假象。例如有一个水果数组，要求每个数组元素都是水果，而实际上数组元素可以是苹果、香蕉等，但这个数组的数组元素的类型还是唯一的，只能是水果类型。 一旦数组的初始化完成，数...\\"}],[\\"meta\\",{\\"property\\":\\"og:type\\",\\"content\\":\\"article\\"}],[\\"meta\\",{\\"property\\":\\"og:locale\\",\\"content\\":\\"zh-CN\\"}],[\\"meta\\",{\\"property\\":\\"og:updated_time\\",\\"content\\":\\"2024-04-21T14:59:43.000Z\\"}],[\\"meta\\",{\\"property\\":\\"article:published_time\\",\\"content\\":\\"2020-08-04T00:00:00.000Z\\"}],[\\"meta\\",{\\"property\\":\\"article:modified_time\\",\\"content\\":\\"2024-04-21T14:59:43.000Z\\"}],[\\"script\\",{\\"type\\":\\"application/ld+json\\"},\\"{\\\\\\"@context\\\\\\":\\\\\\"https://schema.org\\\\\\",\\\\\\"@type\\\\\\":\\\\\\"Article\\\\\\",\\\\\\"headline\\\\\\":\\\\\\"数组\\\\\\",\\\\\\"image\\\\\\":[\\\\\\"\\\\\\"],\\\\\\"datePublished\\\\\\":\\\\\\"2020-08-04T00:00:00.000Z\\\\\\",\\\\\\"dateModified\\\\\\":\\\\\\"2024-04-21T14:59:43.000Z\\\\\\",\\\\\\"author\\\\\\":[{\\\\\\"@type\\\\\\":\\\\\\"Person\\\\\\",\\\\\\"name\\\\\\":\\\\\\"荒流\\\\\\",\\\\\\"url\\\\\\":\\\\\\"https://chua-n.com\\\\\\",\\\\\\"email\\\\\\":\\\\\\"chua_n@qq.com\\\\\\"}]}\\"]]},\\"headers\\":[{\\"level\\":2,\\"title\\":\\"1. Java数组简介\\",\\"slug\\":\\"_1-java数组简介\\",\\"link\\":\\"#_1-java数组简介\\",\\"children\\":[]},{\\"level\\":2,\\"title\\":\\"2. 数组初始化\\",\\"slug\\":\\"_2-数组初始化\\",\\"link\\":\\"#_2-数组初始化\\",\\"children\\":[{\\"level\\":3,\\"title\\":\\"2.1 静态初始化\\",\\"slug\\":\\"_2-1-静态初始化\\",\\"link\\":\\"#_2-1-静态初始化\\",\\"children\\":[]},{\\"level\\":3,\\"title\\":\\"2.2 动态初始化\\",\\"slug\\":\\"_2-2-动态初始化\\",\\"link\\":\\"#_2-2-动态初始化\\",\\"children\\":[]},{\\"level\\":3,\\"title\\":\\"2.3 初始化默认值\\",\\"slug\\":\\"_2-3-初始化默认值\\",\\"link\\":\\"#_2-3-初始化默认值\\",\\"children\\":[]}]},{\\"level\\":2,\\"title\\":\\"3. Java 数组的物理逻辑\\",\\"slug\\":\\"_3-java-数组的物理逻辑\\",\\"link\\":\\"#_3-java-数组的物理逻辑\\",\\"children\\":[]},{\\"level\\":2,\\"title\\":\\"4. 多维数组\\",\\"slug\\":\\"_4-多维数组\\",\\"link\\":\\"#_4-多维数组\\",\\"children\\":[]},{\\"level\\":2,\\"title\\":\\"5. Arrays 类\\",\\"slug\\":\\"_5-arrays-类\\",\\"link\\":\\"#_5-arrays-类\\",\\"children\\":[]}],\\"git\\":{\\"createdTime\\":1626354214000,\\"updatedTime\\":1713711583000,\\"contributors\\":[{\\"name\\":\\"chua-n\\",\\"email\\":\\"chua_n@yeah.net\\",\\"commits\\":7}]},\\"readingTime\\":{\\"minutes\\":6.76,\\"words\\":2028},\\"filePathRelative\\":\\"Java/踏入山门/数组.md\\",\\"localizedDate\\":\\"2020年8月4日\\",\\"excerpt\\":\\"<h2>1. Java数组简介</h2>\\\\n<p>一个数组里只能存储一种数据类型的数据，而不能存储多种数据类型的数据。</p>\\\\n<ul>\\\\n<li>因为 Java 语言类与类之间可以支持继承关系，这样可能产生一个数组里可以存放多种数据类型的假象。例如有一个水果数组，要求每个数组元素都是水果，而实际上数组元素可以是苹果、香蕉等，但这个数组的数组元素的类型还是唯一的，只能是水果类型。</li>\\\\n<li>一旦数组的初始化完成，数组在内存中所占的空间将被固定下来，因此数组的长度将不可改变。即使把某个数组元素的数据清空，但它所占的空间依然被保留，依然属于该数组，数组的长度依旧不变。</li>\\\\n<li>值得指出的是，<strong>数组也是一种数据类型</strong>，它本身是一种<em>引用类型</em>。例如 <code>int</code> 是一个基本类型，但 <code>int[]</code> 就是一种引用类型了。</li>\\\\n</ul>\\",\\"autoDesc\\":true}")\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///59273\n')},81021:(__unused_webpack_module,exports)=>{eval("var __webpack_unused_export__;\n\n__webpack_unused_export__ = ({ value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.A = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODEwMjEuanMiLCJtYXBwaW5ncyI6IjtBQUFhO0FBQ2IsNkJBQTZDLEVBQUUsYUFBYSxDQUFDO0FBQzdEO0FBQ0E7QUFDQSxTQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm90ZWJvb2svLi9ub2RlX21vZHVsZXMvLnBucG0vdnVlLWxvYWRlckAxNy40LjJfdnVlQDMuNS4xM193ZWJwYWNrQDUuOTcuMS9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9kaXN0L2V4cG9ydEhlbHBlci5qcz8yNmM5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8gcnVudGltZSBoZWxwZXIgZm9yIHNldHRpbmcgcHJvcGVydGllcyBvbiBjb21wb25lbnRzXG4vLyBpbiBhIHRyZWUtc2hha2FibGUgd2F5XG5leHBvcnRzLmRlZmF1bHQgPSAoc2ZjLCBwcm9wcykgPT4ge1xuICAgIGNvbnN0IHRhcmdldCA9IHNmYy5fX3ZjY09wdHMgfHwgc2ZjO1xuICAgIGZvciAoY29uc3QgW2tleSwgdmFsXSBvZiBwcm9wcykge1xuICAgICAgICB0YXJnZXRba2V5XSA9IHZhbDtcbiAgICB9XG4gICAgcmV0dXJuIHRhcmdldDtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///81021\n")}}]);