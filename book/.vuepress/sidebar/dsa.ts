import { arraySidebar } from "vuepress-theme-hope";
import { buildSimpleNavObj } from "./util";

export default arraySidebar([
  {
    text: "LeetCode",
    prefix: "LeetCode/",
    collapsible: true,
    icon: "leetcode",
    children: [
      buildSimpleNavObj("001. Two Sum"),
      buildSimpleNavObj("002. Add Two Numbers"),
      buildSimpleNavObj("003. Longest Substring Without Repeating Characters"),
      buildSimpleNavObj("005. Longest Palindromic Substring"),
      buildSimpleNavObj("006. ZigZag Conversion"),
      buildSimpleNavObj("007. Reverse Interger"),
      buildSimpleNavObj("008. String to Integer (atoi),"),
      buildSimpleNavObj("009. Palindrome Number"),
      buildSimpleNavObj("011. Container With Most Water"),
      buildSimpleNavObj("012. Integer to Roman"),
      buildSimpleNavObj("013. Roman to Integer"),
      buildSimpleNavObj("014. Longest Common Prefix"),
      buildSimpleNavObj("015. 3Sum"),
      buildSimpleNavObj("016. 3Sum Closest"),
      buildSimpleNavObj("017. Letter Combinations of a Phone Number"),
      buildSimpleNavObj("018. 4Sum"),
      buildSimpleNavObj("019. Remove Nth Node From End of List"),
      buildSimpleNavObj("020. Valid Parenttheses"),
      buildSimpleNavObj("021. Merge Two Sorted Lists"),
      buildSimpleNavObj("022. Generate Parentheses"),
      buildSimpleNavObj("024. Swap Nodes in Pairs"),
      buildSimpleNavObj("026. Remove Duplicates from Sorted Array"),
      buildSimpleNavObj("027. Remove Element"),
      buildSimpleNavObj("028. Implement strStr(),"),
      buildSimpleNavObj("029. Divide Two Integers"),
      buildSimpleNavObj("031. Next Permutation"),
      buildSimpleNavObj("033. Search in Rotated Sorted Array"),
      buildSimpleNavObj("034. Find First and Last Position of Element in Sorted Array"),
      buildSimpleNavObj("035. Search Insert Position"),
      buildSimpleNavObj("036. Valid Sudoku"),
      buildSimpleNavObj("038. Count and Say"),
      buildSimpleNavObj("039. Combination Sum"),
      buildSimpleNavObj("040. Combination Sum II"),
      buildSimpleNavObj("043. Multiply Strings"),
      buildSimpleNavObj("046. Permutations"),
      buildSimpleNavObj("047. Permutations II"),
      buildSimpleNavObj("048. Rotate Image"),
      buildSimpleNavObj("049. Group Anagrams"),
      buildSimpleNavObj("050. Pow(x, n),"),
      buildSimpleNavObj("053. Maximum Subarray"),
      buildSimpleNavObj("054. Spiral Matrix"),
      buildSimpleNavObj("055. Jump Game"),
      buildSimpleNavObj("056. Merge Intervals"),
      buildSimpleNavObj("058. Length of Last Word"),
      buildSimpleNavObj("059. Spiral Matrix II"),
      buildSimpleNavObj("060. Permutation Sequence"),
      buildSimpleNavObj("061. Rotate List"),
      buildSimpleNavObj("062. Unique Paths"),
      buildSimpleNavObj("063. Unique Paths II"),
      buildSimpleNavObj("064. Minimum Path Sum"),
      buildSimpleNavObj("066. Plus One"),
      buildSimpleNavObj("067. Add Binary"),
      buildSimpleNavObj("069. Sqrt(x),"),
      buildSimpleNavObj("070. Climbing Stairs"),
      buildSimpleNavObj("071. Simplify Path"),
      buildSimpleNavObj("073. Set Matrix Zeroes"),
      buildSimpleNavObj("074. Search a 2D Matrix"),
      buildSimpleNavObj("075. Sort Colors"),
      buildSimpleNavObj("077. Combinations"),
      buildSimpleNavObj("078. Subsets"),
      buildSimpleNavObj("079. Word Search"),
      buildSimpleNavObj("080. Remove Duplicates from Sorted Array II"),
      buildSimpleNavObj("081. Search in Rotated Sorted Array II"),
      buildSimpleNavObj("083. Remove Duplicates from Sorted List"),
      buildSimpleNavObj("086. Partition List"),
      buildSimpleNavObj("088. Merge Sorted Array"),
      buildSimpleNavObj("089. Gray Code"),
      buildSimpleNavObj("090. Subsets II"),
      buildSimpleNavObj("091. Decode Ways"),
      buildSimpleNavObj("100. Same Tree"),
      buildSimpleNavObj("101. Symmetric Tree"),
      buildSimpleNavObj("104. Maximum Depth of Binary Tree"),
      buildSimpleNavObj("107. Binary Tree Level Order Traversal II"),
      buildSimpleNavObj("108. Convert Sorted Array to Binary Search Tree"),
      buildSimpleNavObj("110. Balanced Binary Tree"),
      buildSimpleNavObj("111. Minimum Depth of Binary Tree"),
      buildSimpleNavObj("112. Path Sum"),
      buildSimpleNavObj("118. Pascal's Triangle"),
      buildSimpleNavObj("119. Pascal's Triangle II"),
      buildSimpleNavObj("121. Best Time to Buy and Sell Stock"),
      buildSimpleNavObj("122. Best Time to Buy and Sell Stock II"),
      buildSimpleNavObj("125. Valid Palindrome"),
      buildSimpleNavObj("131. Palindrome Partitioning"),
      buildSimpleNavObj("136. Single Number"),
      buildSimpleNavObj("141. Linked List Cycle"),
      buildSimpleNavObj("155. Min Stack"),
      buildSimpleNavObj("160. Intersection of Two Linked Lists"),
      buildSimpleNavObj("167. Two Sum II - Input array is sorted"),
      buildSimpleNavObj("168. Excel Sheet Column Title"),
      buildSimpleNavObj("169. Majority Element"),
      buildSimpleNavObj("171. Excel Sheet Column Number"),
      buildSimpleNavObj("172. Factorial Trailing Zeroes"),
      buildSimpleNavObj("189. Rotate Array"),
      buildSimpleNavObj("190. Reverse Bits"),
      buildSimpleNavObj("191. Number of 1 Bits"),
      buildSimpleNavObj("198. House Robber"),
      buildSimpleNavObj("202. Happy Number"),
      buildSimpleNavObj("203. Remove Linked List Elements"),
      buildSimpleNavObj("216. Combination Sum III"),
    ]
  },
  {
    text: "剑指offer",
    prefix: "剑指offer/",
    collapsible: true,
    icon: "offer-1",
    // children: "structure"
    children: [
      buildSimpleNavObj("01.Search_in_2D_Array"),
      buildSimpleNavObj("02.Replace_the_Blank_Space"),
      buildSimpleNavObj("03.Print_Linked_List"),
      buildSimpleNavObj("04.Reconstruct_Binary_Tree"),
      buildSimpleNavObj("05.Implement_A_Queue_Using_Two_Stacks"),
      buildSimpleNavObj("06.Minimum_Number_of_Rotation_Array"),
      buildSimpleNavObj("07.Fibonacci_Sequence"),
      buildSimpleNavObj("08.Jumping_Steps"),
      buildSimpleNavObj("09.Jumping_Steps_II"),
      buildSimpleNavObj("10.Rectangle_Covering"),
      buildSimpleNavObj("11.Number_of_1_in_Binary_Representation"),
      buildSimpleNavObj("12.Integer_Power_of_a_Value"),
      buildSimpleNavObj("13.Make_the_Odd_Number_Precedes_the_Even"),
      buildSimpleNavObj("14.The_Last_K_Node_in_the_List"),
      buildSimpleNavObj("15.Reverse_Linked_List"),
      buildSimpleNavObj("16.Merge_Two_Sorted_List"),
      buildSimpleNavObj("17.Substructure_of_a_Tree"),
      buildSimpleNavObj("18.Mirror_of_Binary_Tree"),
      buildSimpleNavObj("19.Print_Matrix_Clockwise"),
      buildSimpleNavObj("20.Implement_Stack_with_Min_Function"),
      buildSimpleNavObj("21.Push_And_Pop_Sequence_of_Stack"),
      buildSimpleNavObj("22.Print_Binary_Tree_From_Up_To_Down"),
      buildSimpleNavObj("23.Verify_Post_Order_Traverse_Of_BST"),
      buildSimpleNavObj("24.Path_That_Sums_to_a_Certain_Value_in_a_Binary_Tree"),
      buildSimpleNavObj("25.Copy_a_Complicated_List"),
      buildSimpleNavObj("26.Conver_BST_to_Sorted_Doubly_Linked_List"),
      buildSimpleNavObj("27.Permutations_of_String"),
      buildSimpleNavObj("28.Find_a_Number_That_Occurs_More_Than_Half_Times_in_an_Array"),
      buildSimpleNavObj("29.Get_Least_Numbers_of_Array"),
      buildSimpleNavObj("30.Find_Greatest_Sum_of_Subarray"),
      buildSimpleNavObj("31.Number_of_1_Between_1_And_N"),
      buildSimpleNavObj("32.Permute_an_Array_into_the_Smallest_Number"),
      buildSimpleNavObj("33.N-th_Ugly_Number"),
      buildSimpleNavObj("34.First_Not_Repeating_Char"),
      buildSimpleNavObj("35.Inverse_Pairs_of_Array"),
      buildSimpleNavObj("36.First_Common_Node_of_Two_Lists"),
      buildSimpleNavObj("37.Get_Number_of_Value_K_in_Sorted_Array"),
      buildSimpleNavObj("38.Depth_of_Binary_Tree"),
      buildSimpleNavObj("39.Whether_a_Binary_Tree_Is_Balanced"),
      buildSimpleNavObj("40.Find_Only_Two_Numbers_That_Appear_Once_in_Array"),
      buildSimpleNavObj("41.All_Continuous_Sequences_Sum_to_N"),
      buildSimpleNavObj("42.Find_Two_Numbers_Sum_to_S_in_Sorted_Array"),
      buildSimpleNavObj("43.Left_Rotate_String"),
      buildSimpleNavObj("44.Reverse_Sentence"),
      buildSimpleNavObj("45.Playing_Card_Shunzi"),
      buildSimpleNavObj("46.Last_Remaining_in_Circle"),
      buildSimpleNavObj("47.Solve_1+2+3+...+n"),
      buildSimpleNavObj("48.Add_Numbers_without_Addition_Subtraction_Multiplication_And_Division"),
      buildSimpleNavObj("49.String_to_Integer"),
      buildSimpleNavObj("50.Duplicate_Numbers_in_Array"),
      buildSimpleNavObj("51.Build_Product_Array"),
      buildSimpleNavObj("52.Regular_Expression_Matching"),
      buildSimpleNavObj("53.Whether_a_String_Is_Numeric"),
      buildSimpleNavObj("54.First_Non_Repeating_Character_in_Character_Stream"),
      buildSimpleNavObj("55.Entry_Node_of_Loop_in_List"),
      buildSimpleNavObj("56.Delete_Duplications_in_Sorted_List"),
      buildSimpleNavObj("57.Next_Node_in_Binary_Tree"),
      buildSimpleNavObj("58.Symmetrical_Binary_Tree"),
      buildSimpleNavObj("59.Print_Binary_Tree_in_Zigzag_Order"),
      buildSimpleNavObj("60.Print_Binary_Tree_into_Multiple_lines"),
      buildSimpleNavObj("61.Serialize_And_Deserialize_Binary_Tree"),
      buildSimpleNavObj("62.K-th_Node_of_BST"),
      buildSimpleNavObj("63.Median_of_Data_Flow"),
      buildSimpleNavObj("64.Maximum_in_Sliding_Window"),
      buildSimpleNavObj("65.Path_in_Matrix"),
      buildSimpleNavObj("66.Range_of_Motion_of_Robot"),
      buildSimpleNavObj("67.Cut_Rope"),
    ]
  },
  {
    text: "interview",
    prefix: "interview/",
    collapsible: true,
    icon: "interview",
    children: [
      buildSimpleNavObj("0-1背包问题"),
      buildSimpleNavObj("最大正方形"),
    ]
  },
  {
    text: "trick",
    prefix: "trick/",
    collapsible: true,
    icon: "bulb",
    children: [
      buildSimpleNavObj("排序"),
      buildSimpleNavObj("二叉树"),
      buildSimpleNavObj("二叉搜索树"),
      buildSimpleNavObj("图"),
    ]
  },
]);
